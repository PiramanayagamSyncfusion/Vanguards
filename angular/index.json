{
	"Angular Accordion Module": {
		"prefix": "ej2-ng-accordion-module",
		"description": "Angular Accordion Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { AccordionComponent, AccordionItemDirective, AccordionItemsDirective } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,AccordionComponent,AccordionItemsDirective,AccordionItemDirective],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Accordion Component": {
		"prefix": "ej2-ng-accordion",
		"description": "This will insert the snippet for Accordion",
		"body": [
			"import { Component, ViewChild  } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-accordion>",
			"\t<e-accordionitems>",
			"\t\t<e-accordionitem expanded='true' header='ASP.NET' content='Microsoft ASP.NET is a set of technologies in the Microsoft .NET Framework for building Web applications and XML Web services.'></e-accordionitem>",
			"\t\t<e-accordionitem header='ASP.NET MVC' content='The Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller.'></e-accordionitem>",
			"\t\t<e-accordionitem header='JavaScript' content='JavaScript (JS) is an interpreted computer programming language.It was originally implemented as part of web browsers so that client-side scripts could interact with the user, control the browser, communicate asynchronously, and alter the document content that was displayed.'></e-accordionitem>",
			"\t</e-accordionitems>",
			"\t</ej-accordion>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t @ViewChild('element') element;",
			"\t ngAfterViewInit() { }",
			"}"
		]
	},
	"Angular RTL in Accordion Component": {
		"prefix": "ej2-ng-accordion-rtl",
		"description": "Accordion is rendered with RTL support",
		"body": [
			"import { Component, ViewChild } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-accordion enableRtl='true'>",
			"\t<e-accordionitems>",
			"\t\t<e-accordionitem expanded='true' header='ASP.NET' content='Microsoft ASP.NET is a set of technologies in the Microsoft .NET Framework for building Web applications and XML Web services.'></e-accordionitem>",
			"\t\t<e-accordionitem header='ASP.NET MVC' content='The Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller.'></e-accordionitem>",
			"\t\t<e-accordionitem header='JavaScript' content='JavaScript (JS) is an interpreted computer programming language.It was originally implemented as part of web browsers so that client-side scripts could interact with the user, control the browser, communicate asynchronously, and alter the document content that was displayed.'></e-accordionitem>",
			"\t</e-accordionitems>",
			"\t</ej-accordion>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t @ViewChild('element') element;",
			"\t ngAfterViewInit() { }",
			"}"
		]
	},
	"Angular AutoCompleteComponent Module": {
		"prefix": "ej2-ng-autocomplete-module",
		"description": "Angular AutoCompleteComponent Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { FormsModule } from '@angular/forms';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { AutoCompleteComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,FormsModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,AutoCompleteComponent],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic AutoCompleteComponent Component": {
		"prefix": "ej2-ng-autocomplete",
		"description": "This will insert the snippet for AutoCompleteComponent",
		"body": [
			"import { Component, ViewChild  } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-accordion>",
			"\t<e-accordionitems>",
			"\t\t<e-accordionitem expanded='true' header='ASP.NET' content='Microsoft ASP.NET is a set of technologies in the Microsoft .NET Framework for building Web applications and XML Web services.'></e-accordionitem>",
			"\t\t<e-accordionitem header='ASP.NET MVC' content='The Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller.'></e-accordionitem>",
			"\t\t<e-accordionitem header='JavaScript' content='JavaScript (JS) is an interpreted computer programming language.It was originally implemented as part of web browsers so that client-side scripts could interact with the user, control the browser, communicate asynchronously, and alter the document content that was displayed.'></e-accordionitem>",
			"\t</e-accordionitems>",
			"\t</ej-accordion>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t @ViewChild('element') element;",
			"\t ngAfterViewInit() { }",
			"}"
		]
	},
	"Angular Remote DataSource in AutoCompleteComponent Component": {
		"prefix": "ej2-ng-autocomplete-ds-remote",
		"description": "Autocomplete is rendered with Remote DataBinding",
		"body": [
			"import { Component } from '@angular/core';",
			"import { AutoCompleteComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"import { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data'",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-autocomplete id='atcelement' [dataSource]='data' [fields]='fields' [placeholder]='text' [sortOrder]='sorting' [query]='query'></ej-autocomplete>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor(){ }",
			"\tpublic data: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/Customers',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"});",
			"\tpublic fields: Object = { value: '${3:ContactName}' };",
			"\tpublic query: Query = new Query().select(['ContactName']).take(6),",
			"\tpublic text: string = 'Find  a customer';",
			"\tpublic sorting: string = 'Ascending';",
			"}"
		]
	},
	"Angular Filtering in AutoComplete Component": {
		"prefix": "ej2-ng-autocomplete-filter",
		"description": "AutoComplete is rendered with Filtering support ",
		"body": [
			"import { Component } from '@angular/core';",
			"import { AutoCompleteComponent  } from '@syncfusion/ej2-ng-dropdowns';",
			"import { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-autocomplete id='atcelement' [dataSource]='${3:sportsData}' [fields]='fields' [placeholder]='text' [query]='query' [filterType]='filterType' [sortOrder]='sorting'></ej-autocomplete>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor(){ }",
			"\tpublic sportsData: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/Customers',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"});",
			"\tpublic fields: Object = { value: '${4:ContactName}' };",
			"\tpublic query: Query = new Query().select(['ContactName', 'CustomerID']).take(6),",
			"\tpublic text: string = 'Find  a customer';",
			"\tpublic filterType: string='StartsWith';",
			"\tpublic sorting: string = 'Ascending';",
			"}"
		]
	},
	"Angular Button Module": {
		"prefix": "ej2-ng-button-module",
		"description": "Angular Button Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { ButtonModule } from '@syncfusion/ej2-ng-buttons';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"enableRipple(true);",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,",
			"\t\tButtonModule,",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Button Component": {
		"prefix": "ej2-ng-button",
		"description": "This will insert the snippet for Button",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<button ej-button>Button</button>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"}"
		]
	},
	"Angular Checkbox": {
		"prefix": "ej2-ng-checkbox",
		"description": "Insert the snippet for Checkbox",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div class='checkbox-control'>",
			"\t<div class='row'>",
			"\t\t <ej-checkbox #checkbox label='CheckBox: true' [checked]='true' (change)='changeHandler()'></ej-checkbox>",
			"\t</div>",
			"\t<div class='row'>",
			"\t\t<ej-checkbox label='Checked, Disabled' [checked]='true' [disabled] = 'true'></ej-checkbox>",
			"\t</div>",
			"\t<div class='row'>",
			"\t\t<ej-checkbox label='Indeterminate, Disabled' [indeterminate] = 'true' [disabled] = 'true'></ej-checkbox>",
			"\t</div>",
			"\t</div>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() { }",
			"\tpublic changeHandler() : void {",
			"\t\tthis.checkbox.label = 'CheckBox: ' + this.checkbox.checked;",
			"\t}",
			"}"
		]
	},
	"Angular Radio Button": {
		"prefix": "ej2-ng-radio",
		"description": "Insert the snippet for Radio button",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: ` <div class='radiobutton-control'>",
			"\t<h4>Select a payment method</h4>",
			"\t<div class='row'>",
			"\t\t<ej-radiobutton label='Credit/Debit card' name='payment' value='credit/debit' checked='true'></ej-radiobutton>",
			"\t</div>",
			"\t<div class='row'>",
			"\t\t<ej-radiobutton label='Net Banking' name='payment' value='netbanking'></ej-radiobutton>",
			"\t</div>",
			"\t<div class='row'>",
			"\t\t<ej-radiobutton label='Cash on Delivery' name='payment' value='cashondelivery'></ej-radiobutton>",
			"\t</div>",
			"\t<div class='row'>",
			"\t\t<ej-radiobutton label='Other Wallets' name='payment' value='others'></ej-radiobutton>",
			"\t</div>",
			"\t</div>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"}"
		]
	},
	"Angular calendar Module": {
		"prefix": "ej2-ng-calendar-module",
		"description": "Angular Calendar Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { CalendarModule } from '@syncfusion/ej2-ng-calendars';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,CalendarModule",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Calendar Component": {
		"prefix": "ej2-ng-calendar",
		"description": "This will insert the snippet for Calendar",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-calendar></ej-calendar>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() {}",
			"}"
		]
	},
	"Angular ComboBox Module": {
		"prefix": "ej2-ng-combobox-module",
		"description": "Angular ComboBox Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { FormsModule } from '@angular/forms';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,FormsModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,ComboBoxComponent],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic ComboBox Component": {
		"prefix": "ej2-ng-combobox",
		"description": "This will insert the snippet for Combobox",
		"body": [
			"import { Component } from '@angular/core';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-combobox id='comboelement' [dataSource]='${3:data}' placeholder = 'Select a game'></ej-combobox>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t public data: string[] = ['Cricket', 'Football', 'Rugby', 'Snooker', 'Tennis'];",
			"}"
		]
	},
	"Angular DataBinding in ComboBox Component": {
		"prefix": "ej2-ng-combobox-ds-remote",
		"description": "ComboBox is rendered with Remote DataSource",
		"body": [
			"import { Component } from '@angular/core';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"import { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data'",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-combobox id='comboelement' #samples [dataSource]='${3:data}' [fields]='fields' [placeholder]='text' [query]='query' [sortOrder]='sorting'></ej-combobox>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor(){ }",
			"\tpublic data: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"});",
			"\tpublic fields: Object = { text: '${4:ContactName}', value: '${5:CustomerID}' };",
			"\tpublic query: Query = new Query().from('Customers').select(['ContactName', 'CustomerID']).take(6),",
			"\tpublic text: string = 'Select a customer';",
			"\tpublic sorting: string = 'Ascending';",
			"}"
		]
	},
	"Angular Filtering in ComboBox Component": {
		"prefix": "ej2-ng-combobox-filter",
		"description": "ComboBox is rendered with Filtering support ",
		"body": [
			"import { Component, ViewChild  } from '@angular/core';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"import { FilteringEventArgs } from '@syncfusion/ej2-dropdowns';",
			"import { EmitType } from '@syncfusion/ej2-base';",
			"import { Query } from '@syncfusion/ej2-data'",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-combobox id='comboelement' #samples [dataSource]='${3:data}' [fields]='fields' [placeholder]='${6:text}' [allowFiltering]='true' (filtering)='onFiltering($event)'></ej-combobox>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t@ViewChild('samples')",
			"\tconstructor(){ }",
			"\tpublic data: { [key: string]: Object }[] = [",
			"\t\t{ Id: 's3', Country: 'Alaska' },",
			"\t\t{ Id: 's1', Country: 'California' },",
			"\t\t{ Id: 's2', Country: 'Florida' },",
			"\t\t{ Id: 's4', Country: 'Georgia' }];",
			"\tpublic fields: Object = { text: '${4:Country}', value: '${5:Id}' };",
			"\tpublic text: string = 'Select a country';",
			"\tpublic onFiltering: EmitType =  (e: FilteringEventArgs) => {",
			"\tlet query = new Query();",
			"\tquery = (e.text != '') ? query.where('Country', 'startswith', e.text, true) : query;",
			"\te.updateData(this.data, query);",
			"};",
			"}"
		]
	},
	"Angular ContextMenu Module": {
		"prefix": "ej2-ng-contextmenu-module",
		"description": "Angular ContextMenu Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { ContextMenuModule } from '@syncfusion/ej2-ng-navigations';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"",
			"enableRipple(true);",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,ContextMenuModule",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic ContextMenu Component": {
		"prefix": "ej2-ng-contextmenu",
		"description": "This will insert the snippet for ContextMenu",
		"body": [
			"import { Component } from '@angular/core';",
			"import { MenuItemModel } from '@syncfusion/ej2-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='target'>Right click / Touch hold to open the ContextMenu</div>",
			"\t\t<ej-contextmenu id='contextmenu' target='#target' [items]= 'menuItems'></ej-contextmenu>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic menuItems: MenuItemModel[] = [",
			"\t{ text: 'Cut' },",
			"\t{ text: 'Copy' },",
			"\t{ text: 'Paste' }];",
			"}"
		]
	},
	"Angular DatePicker Module": {
		"prefix": "ej2-ng-datepicker-module",
		"description": "Angular DatePicker Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { DatePickerModule } from '@syncfusion/ej2-ng-calendars';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,",
			"\t\tDatePickerModule,",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Datepicker Component": {
		"prefix": "ej2-ng-datepicker",
		"description": "This will insert the snippet for DatePicker",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-datepicker [value]='dateValue' placeholder='Enter date'></ej-datepicker>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic dateValue: Date = new Date();",
			"\tconstructor() {}",
			"}"
		]
	},
	"Angular DateRangePicker Module": {
		"prefix": "ej2-ng-daterangepicker-module",
		"description": "Angular DateRangePicker Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { DateRangePickerModule } from '@syncfusion/ej2-ng-calendars';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,",
			"\t\tDateRangePickerModule,",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic DateRangepicker Component": {
		"prefix": "ej2-ng-daterangepicker",
		"description": "This will insert the snippet for DateRangePicker",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-daterangepicker placeholder='Select a range'></ej-daterangepicker>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() {}",
			"}"
		]
	},
	"Angular Dialog Module": {
		"prefix": "ej2-ng-dialog-module",
		"description": "Angular Dialog Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { DialogComponent } from '@syncfusion/ej2-ng-popups';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,DialogComponent],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Dialog Component": {
		"prefix": "ej2-ng-dialog",
		"description": "This will insert the snippet for Dialog",
		"body": [
			"import { Component, ViewChild, OnInit } from '@angular/core';",
			"import { DialogComponent } from '@syncfusion/ej2-ng-popups';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<button class='e-control e-btn' style='position: absolute;' id='targetButton' (click)='onOpenDialog($event)'>Open Dialog</button>",
			"\t\t\t<ej-dialog id='dialog' #ejDialog content='This is a Dialog with content' [target]='targetElement' width='250px'> </ej-dialog>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t@ViewChild('ejDialog') ejDialog: DialogComponent;",
			"\tpublic targetElement: HTMLElement = document.getElementById('dialog-container');",
			"\tonOpenDialog(event) {",
			"\t\tthis.ejDialog.show();",
			"}",
			"}"
		]
	},
	"Angular RTL in Dialog Component": {
		"prefix": "ej2-ng-dialog-rtl",
		"description": "Dialog is rendered with RTL support",
		"body": [
			"import { Component, ViewChild, OnInit } from '@angular/core';",
			"import { DialogComponent } from '@syncfusion/ej2-ng-popups';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='dialog-container><button class='e-control e-btn' style='position: absolute;' id='targetButton' (click)='onOpenDialog($event)'>Open Dialog</button>",
			"\t\t\t<ej-dialog id='dialog' #ejDialog content='This is a Dialog with content' [target]='targetElement' [enableRtl]='enableRtl' width='250px'> </ej-dialog></div>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t@ViewChild('ejDialog') ejDialog: DialogComponent;",
			"\tpublic enableRtl: Boolean = true;",
			"\tpublic targetElement: HTMLElement = document.getElementById('dialog-container');",
			"\tonOpenDialog(event) {",
			"\t\tthis.ejDialog.show();",
			"}",
			"}"
		]
	},
	"Angular DropdownList Module": {
		"prefix": "ej2-ng-dropdown-module",
		"description": "Angular DropdownList Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { FormsModule } from '@angular/forms';",
			"import { DropDownListComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,FormsModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,DropDownListComponent],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic DropdownList Component": {
		"prefix": "ej2-ng-dropdown",
		"description": "This will insert the snippet for DropDownList",
		"body": [
			"import { Component } from '@angular/core';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-dropdownlist id='ddlelement' [dataSource]='data' placeholder = 'Select a game'></ej-dropdownlist>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t public data: string[] = ['Snooker', 'Tennis', 'Cricket', 'Football', 'Rugby'];",
			"}"
		]
	},
	"Angular DataBinding in DropdownList Component": {
		"prefix": "ej2-ng-dropdown-ds-remote",
		"description": "DropDownList is rendered with Remote DataSource",
		"body": [
			"import { Component } from '@angular/core';",
			"import { DropDownListComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"import { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data'",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-dropdownlist id='ddlelement' #samples [dataSource]='data' [fields]='fields' [placeholder]='text' [query]='query' [sortOrder]='sorting'></ej-dropdownlist>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor(){ }",
			"\tpublic data: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"});",
			"\tpublic fields: Object = { text: '${3:ContactName}', value: '${4:CustomerID}' };",
			"\tpublic query: Query = new Query().from('Customers').select(['ContactName', 'CustomerID']).take(6),",
			"\tpublic text: string = 'Select a customer';",
			"\tpublic sorting: string = 'Ascending';",
			"}"
		]
	},
	"Angular Filtering in DropDownList Component": {
		"prefix": "ej2-ng-dropdown-filter",
		"description": "DropDownList is rendered with Filtering support ",
		"body": [
			"import { Component, ViewChild  } from '@angular/core';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"import { FilteringEventArgs } from '@syncfusion/ej2-dropdowns';",
			"import { EmitType } from '@syncfusion/ej2-base';",
			"import { Query } from '@syncfusion/ej2-data'",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-dropdownlist id='ddlelement' #samples [dataSource]='data' [fields]='fields' [placeholder]='text' [allowFiltering]='true' (filtering)='onFiltering($event)'></ej-dropdownlist>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t@ViewChild('samples')",
			"\tconstructor(){ }",
			"\tpublic data: { [key: string]: Object }[] = [",
			"\t\t{ Id: 's3', Country: 'Alaska' },",
			"\t\t{ Id: 's1', Country: 'California' },",
			"\t\t{ Id: 's2', Country: 'Florida' },",
			"\t\t{ Id: 's4', Country: 'Georgia' }];",
			"\tpublic fields: Object = { text: '${3:Country}', value: '${4:Id}' };",
			"\tpublic text: string = 'Select a country';",
			"\tpublic onFiltering: EmitType =  (e: FilteringEventArgs) => {",
			"\tlet query = new Query();",
			"\tquery = (e.text != '') ? query.where('Country', 'startswith', e.text, true) : query;",
			"\te.updateData(this.data, query);",
			"};",
			"}"
		]
	},
	"Angular ListView Module": {
		"prefix": "ej2-ng-listview-module",
		"description": "Angular ListView Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { ListViewModule } from '@syncfusion/ej2-ng-lists';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,ListViewModule",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic ListView Component": {
		"prefix": "ej2-ng-listview",
		"description": "This will insert the snippet for ListView",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-listview id='sample-list' [dataSource]='data'></ej-listview>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic data: Object = [",
			"\t{ text: 'Artwork', id: '01' },",
			"\t{ text: 'Abstract', id: '02' },",
			"\t{ text: 'Modern Painting', id: '03' },",
			"\t{ text: 'Ceramics', id: '04' },",
			"\t{ text: 'Animation Art', id: '05' },",
			"\t{ text: 'Oil Painting', id: '06' }];",
			"}"
		]
	},
	"Angular DataSource in ListView Component": {
		"prefix": "ej2-ng-listview-ds-remote",
		"description": "ListView is rendered with Remote DataSource",
		"body": [
			"import { Component } from '@angular/core';",
			"import { DataManager, Query, ODataV4Adaptor } from '@syncfusion/ej2-data';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-listview id='sample-list' [dataSource]='data' [query]='query' [fields]='fields' [showHeader]='true' [headerTitle]='headertitle'></ej-listview>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic data: Object = new DataManager({",
			"\t\turl: 'http://js.syncfusion.com/ejServices/Wcf/Northwind.svc/',",
			"\t});",
			"\tpublic query = new Query().from('Products').select('ProductID,ProductName').take(6),",
			"\tpublic fields: Object = { id: 'ProductID', text: 'ProductName'  };",
			"\tpublic headertitle = 'Product Name';",
			"}"
		]
	},
	"Angular RTL in ListView Component": {
		"prefix": "ej2-ng-listview-rtl",
		"description": "ListView is rendered with RTL support",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-listview id='sample-list' [dataSource]='data' [enableRtl]='rtl' [headerTitle]='headerTitle' [showHeader]='true'></ej-listview>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic data: Object = [",
			"\t{ text: 'Artwork', id: '01' },",
			"\t{ text: 'Abstract', id: '02' },",
			"\t{ text: 'Modern Painting', id: '03' },",
			"\t{ text: 'Ceramics', id: '04' },",
			"\t{ text: 'Animation Art', id: '05' },",
			"\t{ text: 'Oil Painting', id: '06' }];",
			"\tpublic headerTitle: string = 'Arts';",
			"}"
		]
	},
	"Angular MaskEdit Module": {
		"prefix": "ej2-ng-maskedtextbox-module",
		"description": "Angular MaskEdit Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { FormsModule } from '@angular/forms';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { MaskedTextBoxComponent } from '@syncfusion/ej2-ng-inputs';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,FormsModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,MaskedTextBoxComponent],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic MaskEdit Component": {
		"prefix": "ej2-ng-maskedtextbox",
		"description": "This will insert the snippet for MaskedTextbox",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<label class='label'>Enter the mobile number</label>`+",
			"\t\t\t`<ej-maskedtextbox mask='000-000-0000'></ej-maskedtextbox>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor(){ }",
			"}"
		]
	},
	"Angular CustomCharacter MaskEdit Component": {
		"prefix": "ej2-ng-maskedtextbox-customch",
		"description": "MaskedTextbox is rendered with custom characters.",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-maskedtextbox [customCharacters]='customMaskChar' mask='00:00 >PM' placeholder='Time (ex: 10:00 PM, 10:00 AM)' floatLabelType= 'Always'></ej-maskedtextbox>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic customMaskChar: Object = { P: 'P,A,p,a', M: 'M,m'};",
			"\tconstructor(){ }",
			"}"
		]
	},
	"Angular Multiselect Module": {
		"prefix": "ej2-ng-multiselect-module",
		"description": "Angular MultiSelect Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { FormsModule } from '@angular/forms';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { MultiSelectComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,FormsModule",
			"\t],",
			"\tdeclarations: [${1:App}Component, MultiSelectComponent],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Multiselect Component": {
		"prefix": "ej2-ng-multiselect",
		"description": "This will insert the snippet for MultiSelect",
		"body": [
			"import { Component } from '@angular/core';",
			"import { MultiSelectComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-multiselect id='multiselectelement' [dataSource]='data' [placeholder]='placeholder'></ej-multiselect>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() {}",
			"\tpublic data: string[] = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];",
			"\tpublic placeholder: string = 'Select games';",
			"}"
		]
	},
	"Angular Remote Multiselect Component": {
		"prefix": "ej2-ng-multiselect-ds-remote",
		"description": "Render the MultiSelect component with Remote DataSource",
		"body": [
			"import { Component } from '@angular/core';",
			"import { MultiSelectComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-multiselect id='multiselectelement' [dataSource]='data' [fields]='fields' [placeholder]='placeholder' [query]='query' [sortOrder]='sorting'></ej-multiselect>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() {}",
			"\tpublic data: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"\t});",
			"\tpublic fields: Object = { text: 'ContactName', value: 'CustomerID' };",
			"\tpublic query: Query = new Query().from('Customers').select(['ContactName', 'CustomerID']).take(5);",
			"\tpublic placeholder: string = 'Select customers';",
			"\tpublic sorting: string = 'Ascending';",
			"}"
		]
	},
	"Angular Grouping Multiselect Component": {
		"prefix": "ej2-ng-multiselect-grouping",
		"description": "Render the MultiSelect component with Grouping support",
		"body": [
			"import { Component } from '@angular/core';",
			"import { MultiSelectComponent } from '@syncfusion/ej2-ng-dropdowns';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-multiselect id='multiselectelement' [dataSource]='vegetableData' [fields]='fields'[placeholder]='placeholder' [popupHeight]='height'></ej-multiselect>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() {}",
			"\tpublic vegetableData: { [key: string]: Object }[] = [",
			"\t\t{ vegetable: 'Cabbage', category: 'Leafy and Salad', id: 'item1' },",
			"\t\t{ vegetable: 'Spinach', category: 'Leafy and Salad', id: 'item2' },",
			"\t\t{ vegetable: 'Wheat grass', category: 'Leafy and Salad', id: 'item3' },",
			"\t\t{ vegetable: 'Yarrow', category: 'Leafy and Salad', id: 'item4' },",
			"\t\t{ vegetable: 'Pumpkins', category: 'Leafy and Salad', id: 'item5' },",
			"\t\t{ vegetable: 'Chickpea', category: 'Beans', id: 'item6' },",
			"\t\t{ vegetable: 'Green bean', category: 'Beans', id: 'item7' },",
			"\t\t{ vegetable: 'Horse gram', category: 'Beans', id: 'item8' },",
			"\t\t{ vegetable: 'Garlic', category: 'Bulb and Stem', id: 'item9' },",
			"\t\t{ vegetable: 'Nopal', category: 'Bulb and Stem', id: 'item10' },",
			"\t\t{ vegetable: 'Onion', category: 'Bulb and Stem', id: 'item11' }",
			"\t];",
			"\tpublic fields: Object = { groupBy: 'category', text: 'vegetable', value: 'id' };",
			"\tpublic height: string = '200px';",
			"\tpublic placeholder: string = 'Select vegetables';",
			"}"
		]
	},
	"Angular NumericTextBox Module": {
		"prefix": "ej2-ng-numerictextbox-module",
		"description": "Angular NumericTextBox Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { FormsModule } from '@angular/forms';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { NumericTextBoxComponent } from '@syncfusion/ej2-ng-inputs';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,FormsModule",
			"\t],",
			"\tdeclarations: [${1:App}Component, NumericTextBoxComponent],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic NumericTextBox Component": {
		"prefix": "ej2-ng-numerictextbox",
		"description": "This will insert the snippet for NumerixTextbox",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-numerictextbox format='c2' value='10'></ej-numerictextbox>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() {}",
			"}"
		]
	},
	"Angular Tab Module": {
		"prefix": "ej2-ng-tab-module",
		"description": "Angular Tab Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { FormsModule } from '@angular/forms';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { TabComponent, TabItemsDirective, TabItemDirective } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,FormsModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,TabComponent, TabItemsDirective, TabItemDirective],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Tab Component": {
		"prefix": "ej2-ng-tab",
		"description": "This will insert the snippet for Tab",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TabComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-tab id='element'>",
			"\t<e-tabitems>",
			"\t\t<e-tabitem [header]='headerText[0]' [content]='content0'></e-tabitem>",
			"\t\t<e-tabitem [header]='headerText[1]' [content]='content1'></e-tabitem>",
			"\t\t<e-tabitem [header]='headerText[2]' [content]='content2'></e-tabitem>",
			"\t</e-tabitems>",
			"\t</ej-tab>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic headerText: Object = [{ 'text': '${3:Twitter}' }, { 'text': '${4:Facebook}' },{ 'text': '${5:WhatsApp}' }];",
			"\tpublic content0: string = 'Twitter is an online social networking service that enables users to send and read short 140-character ' +",
			"\t\t'messages called 'tweets'. Registered users can read and post tweets, but those who are unregistered can only read ' +",
			"\t\t'them. Users access Twitter through the website interface, SMS or mobile device app Twitter Inc. is based in San ' +",
			"\t\t'Francisco and has more than 25 offices around the world. Twitter was created in March 2006 by Jack Dorsey, ' +",
			"\t\t'Evan Williams, Biz Stone, and Noah Glass and launched in July 2006. The service rapidly gained worldwide popularity, ' +",
			"\t\t'with more than 100 million users posting 340 million tweets a day in 2012.The service also handled 1.6 billion ' +",
			"\t\t'search queries per day.';",
			"\tpublic content1: string = 'Facebook is an online social networking service headquartered in Menlo Park, California. Its website was ' +",
			"\t\t'launched on February 4, 2004, by Mark Zuckerberg with his Harvard College roommates and fellow students Eduardo ' +",
			"\t\t'Saverin, Andrew McCollum, Dustin Moskovitz and Chris Hughes.The founders had initially limited the websites ' +",
			"\t\t'membership to Harvard students, but later expanded it to colleges in the Boston area, the Ivy League, and Stanford ' +",
			"\t\t'University. It gradually added support for students at various other universities and later to high-school students.';",
			"\tpublic content2: string = 'WhatsApp Messenger is a proprietary cross-platform instant messaging client for smartphones that operates ' +",
			"\t\t'under a subscription business model. It uses the Internet to send text messages, images, video, user location and ' +",
			"\t\t'audio media messages to other users using standard cellular mobile numbers. As of February 2016, WhatsApp had a user ' +",
			"\t\t'base of up to one billion,[10] making it the most globally popular messaging application. WhatsApp Inc., based in ' +",
			"\t\t'Mountain View, California, was acquired by Facebook Inc. on February 19, 2014, for approximately US$19.3 billion.';",
			"}"
		]
	},
	"Angular RTL in Tab Component": {
		"prefix": "ej2-ng-tab-rtl",
		"description": "Tab is rendered with RTL support",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TabComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-tab id='element' enableRtl='true' heightAdjustMode='Auto'>",
			"\t<e-tabitems>",
			"\t\t<e-tabitem [header]='headerText[0]' [content]='content0'></e-tabitem>",
			"\t\t<e-tabitem [header]='headerText[1]' [content]='content1'></e-tabitem>",
			"\t\t<e-tabitem [header]='headerText[2]' [content]='content2'></e-tabitem>",
			"\t</e-tabitems>",
			"\t</ej-tab>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic headerText: Object = [{ 'text': '${3:Twitter}' }, { 'text': '${4:Facebook}' },{ 'text': '${5:WhatsApp}' }];",
			"\tpublic content0: string = 'Twitter is an online social networking service that enables users to send and read short 140-character ' +",
			"\t\t'messages called 'tweets'. Registered users can read and post tweets, but those who are unregistered can only read ' +",
			"\t\t'them. Users access Twitter through the website interface, SMS or mobile device app Twitter Inc. is based in San ' +",
			"\t\t'Francisco and has more than 25 offices around the world. Twitter was created in March 2006 by Jack Dorsey, ' +",
			"\t\t'Evan Williams, Biz Stone, and Noah Glass and launched in July 2006. The service rapidly gained worldwide popularity, ' +",
			"\t\t'with more than 100 million users posting 340 million tweets a day in 2012.The service also handled 1.6 billion ' +",
			"\t\t'search queries per day.';",
			"\tpublic content1: string = 'Facebook is an online social networking service headquartered in Menlo Park, California. Its website was ' +",
			"\t\t'launched on February 4, 2004, by Mark Zuckerberg with his Harvard College roommates and fellow students Eduardo ' +",
			"\t\t'Saverin, Andrew McCollum, Dustin Moskovitz and Chris Hughes.The founders had initially limited the websites ' +",
			"\t\t'membership to Harvard students, but later expanded it to colleges in the Boston area, the Ivy League, and Stanford ' +",
			"\t\t'University. It gradually added support for students at various other universities and later to high-school students.';",
			"\tpublic content2: string = 'WhatsApp Messenger is a proprietary cross-platform instant messaging client for smartphones that operates ' +",
			"\t\t'under a subscription business model. It uses the Internet to send text messages, images, video, user location and ' +",
			"\t\t'audio media messages to other users using standard cellular mobile numbers. As of February 2016, WhatsApp had a user ' +",
			"\t\t'base of up to one billion,[10] making it the most globally popular messaging application. WhatsApp Inc., based in ' +",
			"\t\t'Mountain View, California, was acquired by Facebook Inc. on February 19, 2014, for approximately US$19.3 billion.';",
			"}"
		]
	},
	"Angular TimePicker Module": {
		"prefix": "ej2-ng-timepicker-module",
		"description": "Angular TimePicker Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { TimePickerModule } from '@syncfusion/ej2-ng-calendars';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,",
			"\t\tTimePickerModule,",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic TimePicker Component": {
		"prefix": "ej2-ng-timePicker",
		"description": "This will insert the snippet for TimePicker",
		"body": [
			"import { Component } from '@angular/core';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"",
			"enableRipple(true);",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-timepicker [placeholder]='watermark'></ej-timepicker>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tpublic watermark: string = 'Select a time';",
			"\tconstructor() {}",
			"}"
		]
	},
	"Angular ToolBar Module": {
		"prefix": "ej2-ng-accordion-module",
		"description": "Angular Toolbar Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { ToolbarComponent, ItemDirective, ItemsDirective } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule",
			"\t],",
			"\tdeclarations: [${1:App}Component,ToolbarComponent,ItemsDirective,ItemDirective],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic ToolBar Component": {
		"prefix": "ej2-ng-toolbar",
		"description": "This will insert the snippet for Toolbar",
		"body": [
			"import { Component, ViewChild  } from '@angular/core';",
			"import {Toolbar} from '@syncfusion/ej2-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-toolbar>",
			"\t<e-items>",
			"\t\t<e-items>",
			"\t\t<e-item text='Copy'></e-item>",
			"\t\t<e-item text='Paste'></e-item>",
			"\t\t<e-item type='Separator'></e-item>",
			"\t\t<e-item text='Bold'></e-item>",
			"\t\t<e-item text='Italic'></e-item>",
			"\t\t<e-item text='Underline'></e-item>",
			"\t</e-items>",
			"\t</ej-toolbar>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t @ViewChild('element') element;",
			"\t ngAfterViewInit() { }",
			"}"
		]
	},
	"Angular RTL in ToolBar Component": {
		"prefix": "ej2-ng-toolbar-rtl",
		"description": "Toolbar is rendered with RTL support",
		"body": [
			"import { Component, ViewChild } from '@angular/core';",
			"\timport {Toolbar} from '@syncfusion/ej2-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-toolbar enableRtl='true'>",
			"\t<e-items>",
			"\t\t<e-items>",
			"\t\t<e-item text='Copy'></e-item>",
			"\t\t<e-item text='Paste'></e-item>",
			"\t\t<e-item type='Separator'></e-item>",
			"\t\t<e-item text='Bold'></e-item>",
			"\t\t<e-item text='Italic'></e-item>",
			"\t\t<e-item text='Underline'></e-item>",
			"\t</e-items>",
			"\t</ej-toolbar>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\t @ViewChild('element') element;",
			"\t ngAfterViewInit() { }",
			"}"
		]
	},
	"Angular Tooltip Module": {
		"prefix": "ej2-ng-tooltip-module",
		"description": "Angular Tooltip Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { TooltipModule } from '@syncfusion/ej2-ng-popups';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,TooltipModule",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular Basic Tooltip Component": {
		"prefix": "ej2-ng-tooltip",
		"description": "This will insert the snippet for Tooltip Component",
		"body": [
			"import { Component } from '@angular/core';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-tooltip id='tooltip' content='Tooltip content'>Hover Me</ej-tooltip>`",
			"})",
			"",
			"export class ${2:App}Component {",
			"\tconstructor() {}",
			"}"
		]
	},
	"Angular TreeView Module": {
		"prefix": "ej2-ng-treeview-module",
		"description": "Angular TreeView Module",
		"body": [
			"import { NgModule } from '@angular/core';",
			"import { BrowserModule  } from '@angular/platform-browser';",
			"",
			"import { ${1:App}Component } from './${1:app}.component';",
			"import { TreeViewModule } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@NgModule({",
			"\timports: [",
			"\t\tBrowserModule,",
			"\t\tTreeViewModule,",
			"\t],",
			"\tdeclarations: [${1:App}Component],",
			"\tbootstrap: [${1:App}Component],",
			"})",
			"export class ${1:App}Module { }",
			"$0"
		]
	},
	"Angular TreeView Component Hierarchical Feature": {
		"prefix": "ej2-ng-treeview",
		"description": "TreeView is rendered with hierarchical data source.",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TreeViewComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='treeparent'><ej-treeview id='treeelement' [fields]='field'></ej-treeview></div>`",
			"})",
			"",
			"export class ${6:App}Component {",
			"\tconstructor() { }",
			"\t public continents:Object[] = [",
			"\t\t{",
			"\t\tcode: 'AF', name: 'Africa', countries: [",
			"\t\t\t{ code: 'NGA', name: 'Nigeria' },",
			"\t\t\t{ code: 'EGY', name: 'Egypt' },",
			"\t\t\t{ code: 'ZAF', name: 'South Africa' }]",
			"\t\t},",
			"\t\t{",
			"\t\tcode: 'AS', name: 'Asia', expanded: true, countries: [",
			"\t\t\t{ code: 'CHN', name: 'China' },",
			"\t\t\t{ code: 'IND', name: 'India', selected: true },",
			"\t\t\t{ code: 'JPN', name: 'Japan' }]",
			"\t\t},",
			"\t\t{",
			"\t\tcode: 'EU', name: 'Europe', countries: [",
			"\t\t\t{ code: 'DNK', name: 'Denmark' },",
			"\t\t\t{ code: 'FIN', name: 'Finland' },",
			"\t\t\t{ code: 'AUT', name: 'Austria' }]",
			"\t\t},",
			"\t\t{",
			"\t\tcode: 'NA', name: 'North America', countries: [",
			"\t\t\t{ code: 'USA', name: 'United States of America' },",
			"\t\t\t{ code: 'CUB', name: 'Cuba' },",
			"\t\t\t{ code: 'MEX', name: 'Mexico' }]",
			"\t\t},",
			"\t\t{",
			"\t\tcode: 'SA', name: 'South America', countries: [",
			"\t\t\t{ code: 'BRA', name: 'Brazil' },",
			"\t\t\t{ code: 'COL', name: 'Colombia' },",
			"\t\t\t{ code: 'ARG', name: 'Argentina' }]",
			"\t\t},",
			"\t\t{",
			"\t\tcode: 'OC', name: 'Oceania', countries: [",
			"\t\t\t{ code: 'AUS', name: 'Australia' },",
			"\t\t\t{ code: 'NZL', name: 'New Zealand' },",
			"\t\t\t{ code: 'WSM', name: 'Samoa' }]",
			"\t\t},",
			"\t\t{",
			"\t\tcode: 'AN', name: 'Antarctica', countries: [",
			"\t\t\t{ code: 'BVT', name: 'Bouvet Island' },",
			"\t\t\t{ code: 'ATF', name: 'French Southern Lands' }]",
			"\t\t}];",
			"\tpublic field:Object = { dataSource: ${2:this.continents}, id: '${3:code}', text: '${4:name}', child: '${5:countries}' };",
			"}"
		]
	},
	"Angular TreeView Component SelfReferencial Feature": {
		"prefix": "ej2-ng-treeview-self",
		"description": "TreeView is rendered with self-referential data source.",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TreeViewComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='treeparent'><ej-treeview id='treeelement' [fields]='field'></ej-treeview></div>`",
			"})",
			"",
			"export class ${7:App}Component {",
			"\tconstructor() { }",
			"\tpublic localData: Object[] = [",
			"\t\t{ id: 1, name: 'Discover Music', hasChild: true, expanded: true },",
			"\t\t{ id: 2, pid: 1, name: 'Hot Singles' },",
			"\t\t{ id: 3, pid: 1, name: 'Rising Artists' },",
			"\t\t{ id: 4, pid: 1, name: 'Live Music' },",
			"\t\t{ id: 7, name: 'Sales and Events', hasChild: true },",
			"\t\t{ id: 8, pid: 7, name: '100 Albums - $5 Each' },",
			"\t\t{ id: 9, pid: 7, name: 'Hip-Hop and R&B Sale' },",
			"\t\t{ id: 10, pid: 7, name: 'CD Deals' },",
			"\t\t{ id: 11, name: 'Categories', hasChild: true },",
			"\t\t{ id: 12, pid: 11, name: 'Songs' },",
			"\t\t{ id: 13, pid: 11, name: 'Bestselling Albums' },",
			"\t\t{ id: 14, pid: 11, name: 'New Releases' },",
			"\t\t{ id: 15, pid: 11, name: 'Bestselling Songs' },",
			"\t\t{ id: 16, name: 'MP3 Albums', hasChild: true },",
			"\t\t{ id: 17, pid: 16, name: 'Rock' },",
			"\t\t{ id: 18, pid: 16, name: 'Gospel' },",
			"\t\t{ id: 19, pid: 16, name: 'Latin Music' },",
			"\t\t{ id: 20, pid: 16, name: 'Jazz' },",
			"\t\t{ id: 21, name: 'More in Music', hasChild: true },",
			"\t\t{ id: 22, pid: 21, name: 'Music Trade-In' },",
			"\t\t{ id: 23, pid: 21, name: 'Redeem a Gift Card' },",
			"\t\t{ id: 24, pid: 21, name: 'Band T-Shirts' }",
			"\t];",
			"\tpublic field: Object = { dataSource: ${2:this.localData}, id: '${3:id}', parentID: '${4:pid}', text: '${5:name}', hasChildren: '${6:hasChild}' };",
			"}"
		]
	},
	"Angular TreeView Component Editing Feature": {
		"prefix": "ej2-ng-treeview-editing",
		"description": "TreeView is rendered with editing support.",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TreeViewComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='treeparent'><ej-treeview id='treeelement' [fields]='field' [allowEditing]='allowEditing' (nodeEditing)='editing($event)'></ej-treeview></div>`",
			"})",
			"",
			"export class ${6:App}Component {",
			"\t@ViewChild('samples')",
			"\tconstructor() { }",
			"\tpublic hierarchicalData: Object[] = [",
			"\t\t{ id: '01', name: 'Local Disk(C:)', expanded: true,",
			"\t\tsubChild: [",
			"\t\t\t{",
			"\t\t\t\tid: '01-01', name: 'Program Files',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '01-01-01', name: '7-Zip' },",
			"\t\t\t\t\t{ id: '01-01-02', name: 'Git' },",
			"\t\t\t\t\t{ id: '01-01-03', name: 'IIS Express' },",
			"\t\t\t\t]",
			"\t\t\t},",
			"\t\t\t{",
			"\t\t\t\tid: '01-02', name: 'Users', expanded: true,",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '01-02-01', name: 'Smith' },",
			"\t\t\t\t\t{ id: '01-02-02', name: 'Public' },",
			"\t\t\t\t\t{ id: '01-02-03', name: 'Admin' },",
			"\t\t\t\t]",
			"\t\t\t},",
			"\t\t\t{",
			"\t\t\t\tid: '01-03', name: 'Windows',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '01-03-01', name: 'Boot' },",
			"\t\t\t\t\t{ id: '01-03-02', name: 'FileManager' },",
			"\t\t\t\t\t{ id: '01-03-03', name: 'System32' },",
			"\t\t\t\t]",
			"\t\t\t}",
			"\t\t]",
			"\t\t},",
			"\t\t{ id: '02', name: 'Local Disk(D:)',",
			"\t\tsubChild: [",
			"\t\t\t{",
			"\t\t\t\tid: '02-01', name: 'Personals',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '02-01-01', name: 'My photo.png' },",
			"\t\t\t\t\t{ id: '02-01-02', name: 'Rental document.docx' },",
			"\t\t\t\t\t{ id: '02-01-03', name: 'Pay slip.pdf' },",
			"\t\t\t\t]",
			"\t\t\t},",
			"\t\t\t{",
			"\t\t\t\tid: '02-02', name: 'Projects',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '02-02-01', name: 'ASP Application' },",
			"\t\t\t\t\t{ id: '02-02-02', name: 'TypeScript Application' },",
			"\t\t\t\t\t{ id: '02-02-03', name: 'React Application' },",
			"\t\t\t\t]",
			"\t\t\t},",
			"\t\t\t{",
			"\t\t\t\tid: '02-03', name: 'Office',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '02-03-01', name: 'Work details.docx' },",
			"\t\t\t\t\t{ id: '02-03-02', name: 'Weekly report.docx' },",
			"\t\t\t\t\t{ id: '02-03-03', name: 'Wish list.csv' },",
			"\t\t\t\t]",
			"\t\t\t}",
			"\t\t]",
			"\t\t},",
			"\t\t{ id: '03', name: 'Local Disk(E:)', icon: 'folder',",
			"\t\tsubChild: [",
			"\t\t\t{",
			"\t\t\t\tid: '03-01', name: 'Pictures',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '03-01-01', name: 'Wind.jpg' },",
			"\t\t\t\t\t{ id: '03-01-02', name: 'Stone.jpg' },",
			"\t\t\t\t\t{ id: '03-01-03', name: 'Home.jpg' },",
			"\t\t\t\t]",
			"\t\t\t},",
			"\t\t\t{",
			"\t\t\t\tid: '03-02', name: 'Documents',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '03-02-01', name: 'Environment Pollution.docx' },",
			"\t\t\t\t\t{ id: '03-02-02', name: 'Global Warming.ppt' },",
			"\t\t\t\t\t{ id: '03-02-03', name: 'Social Network.pdf' },",
			"\t\t\t\t]",
			"\t\t\t},",
			"\t\t\t{",
			"\t\t\t\tid: '03-03', name: 'Study Materials',",
			"\t\t\t\tsubChild: [",
			"\t\t\t\t\t{ id: '03-03-01', name: 'UI-Guide.pdf' },",
			"\t\t\t\t\t{ id: '03-03-02', name: 'Tutorials.zip' },",
			"\t\t\t\t\t{ id: '03-03-03', name: 'TypeScript.7z' },",
			"\t\t\t\t]",
			"\t\t\t},",
			"\t\t]",
			"\t\t}",
			"\t];",
			"\tpublic field: Object = { dataSource: ${2:this.hierarchicalData}, id: '${3:id}', text: '${4:name}', child: '${5:subChild}' };",
			"\tpublic allowEditing: boolean = true;",
			"\t public editing(args: NodeCheckEventArgs) {",
			"\t\tif (args.node.parentNode.parentNode.nodeName !== 'LI') {",
			"\t\t\targs.cancel = true;",
			"\t\t}",
			"\t};",
			"}"
		]
	},
	"Angular TreeView Component Drag and Drop Feature": {
		"prefix": "ej2-ng-treeview-drag",
		"description": "TreeView is rendered with drag and drop support.",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TreeViewComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='treeparent'><ej-treeview id='treeelement' [fields]='field' [allowMultiSelection]='allowMultiSelection' [allowDragAndDrop]='allowDragAndDrop'></ej-treeview></div>`",
			"})",
			"",
			"export class ${8:App}Component {",
			"\t@ViewChild('samples')",
			"\tconstructor() { }",
			"\tpublic productTeam: Object[] = [",
			"\t\t{",
			"\t\t\tid: 1, name: 'ASP.NET MVC Team', expanded: true,",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 2, pid: 1, name: 'Smith' },",
			"\t\t\t\t{ id: 3, pid: 1, name: 'Johnson', isSelected: true },",
			"\t\t\t\t{ id: 4, pid: 1, name: 'Anderson' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 5, name: 'Windows Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 6, pid: 5, name: 'Clark' },",
			"\t\t\t\t{ id: 7, pid: 5, name: 'Wright' },",
			"\t\t\t\t{ id: 8, pid: 5, name: 'Lopez' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 9, name: 'Web Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 11, pid: 9, name: 'Joshua' },",
			"\t\t\t\t{ id: 12, pid: 9, name: 'Matthew' },",
			"\t\t\t\t{ id: 13, pid: 9, name: 'David' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 14, name: 'Build Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 15, pid: 14, name: 'Ryan' },",
			"\t\t\t\t{ id: 16, pid: 14, name: 'Justin' },",
			"\t\t\t\t{ id: 17, pid: 14, name: 'Robert' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 18, name: 'WPF Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 19, pid: 18, name: 'Brown' },",
			"\t\t\t\t{ id: 20, pid: 18, name: 'Johnson' },",
			"\t\t\t\t{ id: 21, pid: 18, name: 'Miller' },",
			"\t\t\t]",
			"\t\t}",
			"\t];",
			"\tpublic field: Object = { dataSource: ${2:this.productTeam}, id: '${3:id}', parentID: '${4:pid}', text: '${5:name}', hasChildren: '${6:hasChild}', selected: '${7:isSelected}' };",
			"\tpublic allowDragAndDrop : boolean = true;",
			"}"
		]
	},
	"Angular TreeView Component CheckBox Feature": {
		"prefix": "ej2-ng-treeview-checkbox",
		"description": "TreeView is rendered with checkbox support.",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TreeViewComponent } from '@syncfusion/ej2-ng-navigations';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"enableRipple(true);",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='treeparent'><ej-treeview id='treeelement' [fields]='field' [showCheckBox]='showCheckBox'></ej-treeview></div>`",
			"})",
			"",
			"export class ${7:App}Component {",
			"\tconstructor() { }",
			"\tpublic countries: Object[] = [",
			"\t\t{ id: 1, name: 'Australia', hasChild: true, expanded: true },",
			"\t\t{ id: 2, pid: 1, name: 'New South Wales' },",
			"\t\t{ id: 3, pid: 1, name: 'Victoria' },",
			"\t\t{ id: 4, pid: 1, name: 'South Australia' },",
			"\t\t{ id: 6, pid: 1, name: 'Western Australia' },",
			"\t\t{ id: 7, name: 'Brazil', hasChild: true },",
			"\t\t{ id: 8, pid: 7, name: 'Paraná' },",
			"\t\t{ id: 9, pid: 7, name: 'Ceará' },",
			"\t\t{ id: 10, pid: 7, name: 'Acre' },",
			"\t\t{ id: 11, name: 'China', hasChild: true },",
			"\t\t{ id: 12, pid: 11, name: 'Guangzhou' },",
			"\t\t{ id: 13, pid: 11, name: 'Shanghai' },",
			"\t\t{ id: 14, pid: 11, name: 'Beijing' },",
			"\t\t{ id: 15, pid: 11, name: 'Shantou' },",
			"\t\t{ id: 16, name: 'France', hasChild: true },",
			"\t\t{ id: 17, pid: 16, name: 'Pays de la Loire' },",
			"\t\t{ id: 18, pid: 16, name: 'Aquitaine' },",
			"\t\t{ id: 19, pid: 16, name: 'Brittany' },",
			"\t\t{ id: 20, pid: 16, name: 'Lorraine' },",
			"\t\t{ id: 21, name: 'India', hasChild: true },",
			"\t\t{ id: 22, pid: 21, name: 'Assam' },",
			"\t\t{ id: 23, pid: 21, name: 'Bihar' },",
			"\t\t{ id: 24, pid: 21, name: 'Tamil Nadu' },",
			"\t\t{ id: 25, pid: 21, name: 'Punjab' },",
			"\t];",
			"\tpublic field: Object = { dataSource: ${2:this.countries}, id: '${3:id}', parentID: '${4:pid}', text: '${5:name}', hasChildren: '${6:hasChild}' };",
			"\tpublic showCheckBox: boolean = true;",
			"}"
		]
	},
	"Angular TreeView Component MultiSelection Feature": {
		"prefix": "ej2-ng-treeview-multiselect",
		"description": "TreeView is rendered with multi selection support.",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TreeViewComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<div id='treeparent'><ej-treeview id='treeelement' [fields]='field' [allowMultiSelection]='allowMultiSelection'></ej-treeview></div>`",
			"})",
			"",
			"export class ${8:App}Component {",
			"\tconstructor() { }",
			"\tpublic countries: Object[] = [",
			"\t\t{ id: 1, name: 'Australia', hasChild: true, expanded: true },",
			"\t\t{ id: 2, pid: 1, name: 'New South Wales' },",
			"\t\t{ id: 3, pid: 1, name: 'Victoria' },",
			"\t\t{ id: 4, pid: 1, name: 'South Australia' },",
			"\t\t{ id: 6, pid: 1, name: 'Western Australia' },",
			"\t\t{ id: 7, name: 'Brazil', hasChild: true },",
			"\t\t{ id: 8, pid: 7, name: 'Paraná' },",
			"\t\t{ id: 9, pid: 7, name: 'Ceará' },",
			"\t\t{ id: 10, pid: 7, name: 'Acre' },",
			"\t\t{ id: 11, name: 'China', hasChild: true },",
			"\t\t{ id: 12, pid: 11, name: 'Guangzhou' },",
			"\t\t{ id: 13, pid: 11, name: 'Shanghai' },",
			"\t\t{ id: 14, pid: 11, name: 'Beijing' },",
			"\t\t{ id: 15, pid: 11, name: 'Shantou' },",
			"\t\t{ id: 16, name: 'France', hasChild: true },",
			"\t\t{ id: 17, pid: 16, name: 'Pays de la Loire' },",
			"\t\t{ id: 18, pid: 16, name: 'Aquitaine' },",
			"\t\t{ id: 19, pid: 16, name: 'Brittany' },",
			"\t\t{ id: 20, pid: 16, name: 'Lorraine' },",
			"\t\t{ id: 21, name: 'India', hasChild: true },",
			"\t\t{ id: 22, pid: 21, name: 'Assam' },",
			"\t\t{ id: 23, pid: 21, name: 'Bihar' },",
			"\t\t{ id: 24, pid: 21, name: 'Tamil Nadu' },",
			"\t\t{ id: 25, pid: 21, name: 'Punjab' },",
			"\t];",
			"\tpublic field: Object = { dataSource: ${2:this.countries}, id: '${3:id}', parentID: '${4:pid}', text: '${5:name}', hasChildren: '${6:hasChild}', selected: '${7:isSelected}' };",
			"\tpublic allowMultiSelection: boolean = true;",
			"}"
		]
	},
	"Angular TreeView Component RTL Feature": {
		"prefix": "ej2-ng-treeview-rtl",
		"description": "TreeView is rendered with RTL support.",
		"body": [
			"import { Component } from '@angular/core';",
			"import { TreeViewComponent } from '@syncfusion/ej2-ng-navigations';",
			"",
			"@Component({",
			"\tselector: '${1:app}',",
			"\ttemplate: `<ej-treeview id='rtl' [fields]='field' [enableRtl]='enableRtl'></ej-treeview>`",
			"})",
			"",
			"export class ${8:App}Component {",
			"\t@ViewChild('samples')",
			"\tconstructor() { }",
			"\tpublic productTeam: Object[] = [",
			"\t\t{",
			"\t\t\tid: 1, name: 'ASP.NET MVC Team', expanded: true,",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 2, pid: 1, name: 'Smith' },",
			"\t\t\t\t{ id: 3, pid: 1, name: 'Johnson', isSelected: true },",
			"\t\t\t\t{ id: 4, pid: 1, name: 'Anderson' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 5, name: 'Windows Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 6, pid: 5, name: 'Clark' },",
			"\t\t\t\t{ id: 7, pid: 5, name: 'Wright' },",
			"\t\t\t\t{ id: 8, pid: 5, name: 'Lopez' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 9, name: 'Web Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 11, pid: 9, name: 'Joshua' },",
			"\t\t\t\t{ id: 12, pid: 9, name: 'Matthew' },",
			"\t\t\t\t{ id: 13, pid: 9, name: 'David' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 14, name: 'Build Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 15, pid: 14, name: 'Ryan' },",
			"\t\t\t\t{ id: 16, pid: 14, name: 'Justin' },",
			"\t\t\t\t{ id: 17, pid: 14, name: 'Robert' },",
			"\t\t\t]",
			"\t\t},",
			"\t\t{",
			"\t\t\tid: 18, name: 'WPF Team',",
			"\t\t\tchild: [",
			"\t\t\t\t{ id: 19, pid: 18, name: 'Brown' },",
			"\t\t\t\t{ id: 20, pid: 18, name: 'Johnson' },",
			"\t\t\t\t{ id: 21, pid: 18, name: 'Miller' },",
			"\t\t\t]",
			"\t\t}",
			"\t];",
			"\tpublic field: Object = { dataSource: ${2:this.productTeam}, id: '${3:id}', parentID: '${4:pid}', text: '${5:name}', hasChildren: '${6:hasChild}', selected: '${7:isSelected}' };",
			"\t public enableRtl:boolean = true;",
			"}"
		]
	}
}