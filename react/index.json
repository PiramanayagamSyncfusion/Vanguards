{
	"React Accordion Module": {
		"prefix": "ej2-react-accordion",
		"description": "React Accordion Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { AccordionComponent, AccordionItemsDirective, AccordionItemDirective } from '@syncfusion/ej2-react-navigations';",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn (",
			"\t\t<AccordionComponent>",
			"\t\t\t<AccordionItemsDirective>",
			"\t\t\t<AccordionItemDirective expanded='true' header='ASP.NET' content='Microsoft ASP.NET is a set of technologies in the Microsoft .NET Framework for building Web applications and XML Web services.' />",
			"\t\t\t<AccordionItemDirective header='ASP.NET MVC' content='The Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller.' />",
			"\t\t\t<AccordionItemDirective header='JavaScript' content= 'JavaScript (JS) is an interpreted computer programming language.It was originally implemented as part of web browsers so that client-side scripts could interact with the user, control the browser, communicate asynchronously, and alter the document content that was displayed.' />",
			"\t\t\t</AccordionItemsDirective>",
			"\t\t</AccordionComponent>",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App}/>, document.getElementById('element'));"
		]
	},
	"React Accordion RTL Module": {
		"prefix": "ej2-react-accordion-rtl",
		"description": "React Accordion RTL Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { AccordionComponent, AccordionItemsDirective, AccordionItemDirective } from '@syncfusion/ej2-react-navigations';",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn (",
			"\t\t<AccordionComponent enableRtl='true'>",
			"\t\t\t<AccordionItemsDirective>",
			"\t\t\t<AccordionItemDirective expanded='true' header='ASP.NET' content='Microsoft ASP.NET is a set of technologies in the Microsoft .NET Framework for building Web applications and XML Web services.' />",
			"\t\t\t<AccordionItemDirective header='ASP.NET MVC' content='The Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller.' />",
			"\t\t\t<AccordionItemDirective header='JavaScript' content= 'JavaScript (JS) is an interpreted computer programming language.It was originally implemented as part of web browsers so that client-side scripts could interact with the user, control the browser, communicate asynchronously, and alter the document content that was displayed.' />",
			"\t\t\t</AccordionItemsDirective>",
			"\t\t</AccordionComponent>",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App}/>, document.getElementById('element'));"
		]
	},
	"React AutoComplete Module": {
		"prefix": "ej2-react-autocomplete",
		"description": "React AutoComplete Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { AutoCompleteComponent  } from '@syncfusion/ej2-react-dropdowns';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource: string[] = ['Badminton', 'Basketball', 'Cricket', 'Football', 'Golf', 'Gymnastics', 'Hockey', 'Rugby', 'Snooker', 'Tennis'];",
			"\trender() {",
			"\treturn (",
			"\t\t<AutoCompleteComponent id='atcelement' dataSource={this.${2:dataSource}} />",
			"\t);",
			"\t}",
			"\t}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React AutoComplete DataBinding Module": {
		"prefix": "ej2-react-autocomplete-ds-remote",
		"description": "React AutoComplete DataBinding Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { AutoCompleteComponent } from '@syncfusion/ej2-react-dropdowns';",
			"import { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"\t});",
			"\tprivate query: Query = new Query().from('Customers').select(['ContactName', 'CustomerID']).take(6);",
			"\t private fields: object = { text: 'ContactName', value: 'CustomerID' };",
			"\tprivate sortOrder: string = 'Ascending';",
			"\trender() {",
			"\treturn (",
			"\t\t<AutoCompleteComponent id='atcelement' query={this.query} dataSource={this.${2:dataSource}} fields={this.fields} sortOrder={this.sortOrder} placeholder='Select a customer' />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React AutoComplete Filtering Module": {
		"prefix": "ej2-react-autocomplete-filter",
		"description": "React AutoComplete Filtering Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { AutoCompleteComponent } from '@syncfusion/ej2-react-dropdowns';",
			"import { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tconstructor() {",
			"\t\tsuper();",
			"\tthis.onFiltering = this.onFiltering.bind(this);",
			"\t}",
			"\tprivate dataSource: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/Customers',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"\t});",
			" private fields: object = { value: 'ContactName' };",
			"private query: Query = new Query().select(['ContactName', 'CustomerID']).take(10);",
			"private sortOrder: string = 'Ascending';",
			"onFiltering(e: FilteringEventArgs) {",
			"if (e.text == '') e.updateData(this.searchData);",
			"else {",
			"if (e.text.length < 3) { return; }",
			"let query: Query = new Query().select(['ContactName', 'CustomerID']);",
			"query = (e.text !== '') ? query.where('ContactName', 'startswith', e.text, true) : query;",
			"e.updateData(this.searchData, query);",
			"}",
			"}",
			"\trender() {",
			"\treturn (",
			"\t\t<AutoCompleteComponent id='atcelement' filtering={this.${3:onFiltering}} query={this.${4:query}} dataSource={this.${2:dataSource}} sortOrder={this.${5:sortOrder}} fields={this.${6:fields}} placeholder='Find a customer' minLength={3}/>",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React Button Module": {
		"prefix": "ej2-react-button",
		"description": "React Button Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ButtonComponent } from '@syncfusion/ej2-react-buttons';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"enableRipple(true);",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\treturn (",
			"\t\t<ButtonComponent>Button</ButtonComponent>",
			"\t);",
			"\t}",
			"}",
			"ReactDom.render(<${1:App} />,document.getElementById('button'));"
		]
	},
	"React CheckBox Module": {
		"prefix": "ej2-react-checkbox",
		"description": "React CheckBox Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"enableRipple(true);",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\treturn (",
			"\t\t  <CheckBoxComponent label='Default' />",
			"\t);",
			"\t}",
			"}",
			"ReactDom.render(<${1:App} />,document.getElementById('check-box'));"
		]
	},
	"React RadioButton Module": {
		"prefix": "ej2-react-radio",
		"description": "React RadioButton Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { RadioButtonComponent } from '@syncfusion/ej2-react-buttons';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"enableRipple(true);",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\treturn (",
			"\t\t<ul>",
			"\t\t<li><RadioButtonComponent label='Option 1' name='default' /></li>",
			"\t\t<li><RadioButtonComponent label='Option 2' name='default' /></li>",
			"\t\t</ul>",
			"\t);",
			"\t}",
			"}",
			"ReactDom.render(<${1:App} />,document.getElementById('radio-button'));"
		]
	},
	"React Calendar Module": {
		"prefix": "ej2-react-calendar",
		"description": "React Calendar Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { CalendarComponent } from '@syncfusion/ej2-react-calendars';",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn <CalendarComponent id='calendar' />",
			"\t}",
			"};",
			"ReactDOM.render(<${1:App} />, document.getElementById('element'));"
		]
	},
	"React Calendar Locale Module": {
		"prefix": "ej2-react-calendar-locale",
		"description": "React Calendar Locale Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { CalendarComponent } from '@syncfusion/ej2-react-calendars';",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn <CalendarComponent id='calendar' locale='${2:en-US}' />",
			"\t}",
			"};",
			"ReactDOM.render(<${1:App} />, document.getElementById('element'));"
		]
	},
	"React ComboBox Module": {
		"prefix": "ej2-react-combobox",
		"description": "React ComboBox Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-react-dropdowns';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\treturn (",
			"\t\t<ComboBoxComponent id='comboelement'></ComboBoxComponent>",
			"\t);",
			"\t}",
			"\t}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React ComboBox DataBinding Module": {
		"prefix": "ej2-react-combobox-ds-remote",
		"description": "React ComboBox DataBinding Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-react-dropdowns';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\t\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t\t\t{ Id: 'game1', text: 'Badminton' },",
			"\t\t\t{ Id: 'game2', text: 'Football' },",
			"\t\t\t{ Id: 'game3', text: 'Tennis' }",
			"\t];",
			"\t\tprivate fields: object = { text: 'text', value: 'Id' };",
			"render() {",
			"\treturn (",
			"\t\t\t<ComboBoxComponent id='comboelement' dataSource={this.${1:dataSource}} fields={this.${1:fields}} placeholder='Select a game' />",
			"\t);",
			"\t\t}",
			"\t}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React ComboBox Filtering Module": {
		"prefix": "ej2-react-combobox-filter",
		"description": "React ComboBox Filtering Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ComboBoxComponent } from '@syncfusion/ej2-react-dropdowns';",
			"import { Query } from '@syncfusion/ej2-data';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tconstructor() {",
			"\t\tsuper();",
			"\t\tthis.onFiltering = this.onFiltering.bind(this);",
			"\t}",
			"\tprivate dataSource: { [key: string]: Object; }[] = [",
			"\t{ value: 's1', text: 'California' },",
			"\t{ value: 's2', text: 'Florida' },",
			"\t{ value: 's3', text: 'Alaska' },",
			"\t{ value: 's4', text: 'Georgia' },",
			"\t];",
			"\tprivate fields: object = { text: '${2:text}', value: '${3:value}' };",
			"\tprivate sortOrder: string = 'Ascending';",
			"\tonFiltering(args: FilteringEventArgs) {",
			"\t\tlet query = new Query();",
			"\t\tquery = (args.text != ",
			") ? query.where('Country', 'startswith', args.text, true) : query;",
			"\t\targs.updateData(this.dataSource, query);",
			"\t}",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<ComboBoxComponent id='comboelement' popupHeight='250px' fields={this.fields} filtering={this.onFiltering} allowFiltering={true} sortOrder={this.sortOrder} dataSource={this.${4:dataSource}} placeholder='Select a country' />",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React ContextMenu Module": {
		"prefix": "ej2-react-contextmenu",
		"description": "React ContextMenu Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ContextMenuComponent, MenuItemModel } from '@syncfusion/ej2-react-navigations';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate menuItems: MenuItemModel[] = [",
			"\t{",
			"\t\ttext: 'Cut'",
			"\t},",
			"\t{",
			"\t\ttext: 'Copy'",
			"\t},",
			"\t{",
			"\t\ttext: 'Paste'",
			"\t}];",
			"render() {",
			"\treturn (",
			"\t<div>",
			"\t\t<div id='target'>Right click / Touch hold to open the ContextMenu</div>",
			"\t\t<ContextMenuComponent target='#target' items={this.${2:menuItems}} />",
			"\t</div>",
			"\t);",
			"}",
			"}"
		]
	},
	"React DatePicker Module": {
		"prefix": "ej2-react-datepicker",
		"description": "React DatePicker Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { DatePickerComponent } from '@syncfusion/ej2-react-calendars';",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn <DatePickerComponent id='datepicker' placeholder='Enter date' />;",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('element'));"
		]
	},
	"React DateRangePicker Module": {
		"prefix": "ej2-react-daterangepicker",
		"description": "React DateRangePicker Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';",
			"class App extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn <DateRangePickerComponent id='daterangepicker' placeholder='Select a range' />",
			"\t}",
			"};",
			"ReactDOM.render(<App />, document.getElementById('element'));"
		]
	},
	"React Dialog Module": {
		"prefix": "ej2-react-dialog",
		"description": "React Dialog Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { DialogComponent } from '@syncfusion/ej2-react-popups';",
			"ReactDOM.render(<DialogComponent",
			"\t\twidth='250px' content='This is a Dialog with content' ref={dialog => this.dialogInstance = dialog} target='#container'>",
			"</DialogComponent>, document.getElementById('dialog'));"
		]
	},
	"React Dialog RTL Module": {
		"prefix": "ej2-react-dialog-rtl",
		"description": "React Dialog Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { DialogComponent } from '@syncfusion/ej2-react-popups';",
			"ReactDOM.render(<DialogComponent",
			"\t\twidth='250px'  content='This is a Dialog with content' enableRtl='true' ref={dialog => this.dialogInstance = dialog} target='#container'>",
			"</DialogComponent>, document.getElementById('dialog'));"
		]
	},
	"React DropDown Module": {
		"prefix": "ej2-react-dropdown",
		"description": "React DropDown Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"private dataSource: string[] = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t <DropDownListComponent id='ddlelement' dataSource={this.${1:dataSource}} />",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React DropDown Databinding Module": {
		"prefix": "ej2-react-dropdown-ds-remote",
		"description": "React DropDown Databinding Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\t\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t\t{ value: 'game1', text: 'Badminton' },",
			"\t\t{ value: 'game2', text: 'Football' },",
			"\t\t{ value: 'game3', text: 'Tennis' }",
			"\t\t];",
			"\t\tprivate fields: object = { text: '${2:text}', value: '${3:value}' };",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t <DropDownListComponent id='ddlelement' dataSource={this.${4:dataSource}} />",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React DropDown Filtering Module": {
		"prefix": "ej2-react-dropdown-filter",
		"description": "React DropDown Filtering Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { DropDownListComponent, FilteringEventArgs } from '@syncfusion/ej2-react-dropdowns';",
			"import { Query } from '@syncfusion/ej2-data';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tconstructor() {",
			"\t\tsuper();",
			"\t\tthis.onFiltering = this.onFiltering.bind(this);",
			"\t}",
			"\tprivate dataSource: { [key: string]: Object; }[] = [",
			"\t\t{ value: 's1', text: 'California' },",
			"\t\t{ value: 's2', text: 'Florida' },",
			"\t\t{ value: 's3', text: 'Alaska' },",
			"\t\t{ value: 's4', text: 'Georgia' },",
			"\t];",
			"\tprivate fields: object = { text: '${2:text}', value: '${3:value}'};",
			"\tprivate sortOrder: string = 'Ascending';",
			"\tonFiltering(args: FilteringEventArgs) {",
			"\t\tlet query = new Query();",
			"\t\tquery = (args.text != ",
			") ? query.where('Country', 'startswith', args.text, true) : query;",
			"\t\targs.updateData(this.dataSource, query);",
			"\t}",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t <DropDownListComponent id='ddlelement' popupHeight='250px' fields={this.fields} filtering={this.onFiltering} allowFiltering={true} dataSource={this. ${5:dataSource}} placeholder='${4:Select a game}' />",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React ListView Module": {
		"prefix": "ej2-react-listview",
		"description": "React ListView Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ListViewComponent } from '@syncfusion/ej2-react-lists';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource: { [key: string]: string }[] = [",
			"\t{ text: 'Artwork', id: '01' },",
			"\t{ text: 'Abstract', id: '02' },",
			"\t{ text: 'Modern Painting', id: '03' },",
			"\t{ text: 'Ceramics', id: '04' },",
			"\t{ text: 'Animation Art', id: '05' },",
			"\t{ text: 'Oil Painting', id: '06' }];",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<ListViewComponent id='list' dataSource={this.${2:dataSource}} ></ListViewComponent>",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('element'));"
		]
	},
	"React ListView Datasource Module": {
		"prefix": "ej2-react-listview-ds-remote",
		"description": "React ListView Datasource Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ListViewComponent } from '@syncfusion/ej2-react-lists';",
			"import { DataManager, Query, ODataV4Adaptor } from '@syncfusion/ej2-data';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource = new DataManager({ url: 'http://js.syncfusion.com/ejServices/Wcf/Northwind.svc/', crossDomain: true });",
			"\tprivate query = new Query().from('Products').select('ProductID,ProductName').take(6);",
			"\tprivate fields = { id: 'ProductID', text: 'ProductName' };",
			"\trender() {",
			"\t\treturn (",
			"\t\t<ListViewComponent id='list' dataSource={this.${2:dataSource}} fields={this.fields} query={this.query} showHeader = 'true' headerTitle = 'Product Name'></ListViewComponent>",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('element'));"
		]
	},
	"React ListView RTL Module": {
		"prefix": "ej2-react-listview-rtl",
		"description": "React ListView RTL Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ListViewComponent } from '@syncfusion/ej2-react-lists';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource: { [key: string]: string }[] = [",
			"\t{ text: 'Artwork', id: '01' },",
			"\t{ text: 'Abstract', id: '02' },",
			"\t{ text: 'Modern Painting', id: '03' },",
			"\t{ text: 'Ceramics', id: '04' },",
			"\t{ text: 'Animation Art', id: '05' },",
			"\t{ text: 'Oil Painting', id: '06' }];",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<ListViewComponent id='list' dataSource={this.${2:dataSource}} enableRtl='true'></ListViewComponent>",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('element'));"
		]
	},
	"React Masked TextBox Module": {
		"prefix": "ej2-react-maskedtextbox",
		"description": "React Masked TextBox Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { MaskedTextBoxComponent } from '@syncfusion/ej2-react-inputs';",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn (",
			"\t\t<div>",
			"\t\t\t<label class='label'>Enter the mobile number</label>",
			"\t\t\t<MaskedTextBoxComponent ${2:mask}={'000-000-0000'} >",
			"\t\t\t</MaskedTextBoxComponent>",
			"\t\t</div>",
			"\t);",
			"\t}",
			"};",
			"\tReactDOM.render(<${1:App} />, document.getElementById('maskedContainer'));"
		]
	},
	"React Masked TextBox Custom Characters Module": {
		"prefix": "ej2-react-maskedtextbox-customch",
		"description": "React Masked TextBox Custom Characters Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { MaskedTextBoxComponent } from '@syncfusion/ej2-react-inputs';",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\tpublic ${3:chars}: Object = { P: 'P,A,a,p', M: 'M,m'};",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<MaskedTextBoxComponent ${2:mask}='00:00 >PM'  customCharacters= {this.${3:chars}}  placeholder= 'Time (ex: 10:00 PM, 10:00 AM)' floatLabelType='Always'>",
			"\t\t\t</MaskedTextBoxComponent>",
			"\t\t);",
			"\t}",
			"};",
			"ReactDOM.render(<${1:App} />, document.getElementById('maskedContainer'));"
		]
	},
	"React MultiSelect Module": {
		"prefix": "ej2-react-multiselect",
		"description": "React MultiSelect Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource: string[] = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];",
			"\trender() {",
			"\treturn (",
			"\t\t<MultiSelectComponent id='mtselement' dataSource={this. ${2:dataSource}}  placeholder='Find a game' />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React MultiSelect Databinding Module": {
		"prefix": "ej2-react-multiselect-ds-remote",
		"description": "React MultiSelect Databinding Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';",
			"import { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource: DataManager = new DataManager({",
			"\t\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/',",
			"\t\tadaptor: new ODataV4Adaptor,",
			"\t\tcrossDomain: true",
			"\t});",
			"\tprivate query: Query = new Query().from('Customers').select(['ContactName', 'CustomerID']).take(6);",
			"\t private fields: object = { text: 'ContactName', value: 'CustomerID' };",
			"\tprivate sortOrder: string = 'Ascending';",
			"\trender() {",
			"\treturn (",
			"\t\t<MultiSelectComponent id='mtselement' query={this.query} dataSource={this.${2:dataSource}} fields={this.fields} sortOrder={this.sortOrder} placeholder='Select a customer' />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React MultiSelect Grouping Module": {
		"prefix": "ej2-react-multiselect-grouping",
		"description": "React MultiSelect Grouping Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t\t{ text: 'Cabbage', groupBy: 'Leafy and Salad', value: 'item1' },",
			"\t\t{ text: 'Spinach', groupBy: 'Leafy and Salad', value: 'item2' }, ",
			"\t\t{ text: 'Chickpea', groupBy: 'Beans', value: 'item6' },",
			"\t\t{ text: 'Green bean', groupBy: 'Beans', value: 'item7' },",
			"\t\t{ text: 'Nopal', groupBy: 'Bulb and Stem', value: 'item10' },",
			"\t\t{ text: 'Onion', groupBy: 'Bulb and Stem', value: 'item11' }",
			"\t];",
			"\tprivate fields: object = { groupBy: '${2:groupBy}', text: '${3:text}', value: '${4:value}' };",
			"\trender() {",
			"\treturn (",
			"\t\t <MultiSelectComponent id='mtselement' popupHeight='200px' fields={this.fields} dataSource={this.${5:dataSource}} placeholder='Select a vegetable'/>",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React NumericTextBox Module": {
		"prefix": "ej2-react-numerictextbox",
		"description": "React NumericTextBox Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';",
			"\t\tReactDOM.render(<NumericTextBoxComponent value={10} > </NumericTextBoxComponent>,document.getElementById('numericContainer'));"
		]
	},
	"React Tab Module": {
		"prefix": "ej2-react-tab",
		"description": "React Tab Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { TabComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-react-navigations';",
			"export default class App extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\tlet headertext: any;",
			"\theadertext = [{ text: 'Twitter'}, { text: 'Facebook'}, { text: 'WhatsApp'}];",
			"\treturn (",
			"\t\t<TabComponent heightAdjustMode='Auto' id='tabelement'>",
			"\t\t<TabItemsDirective>",
			"\t\t<TabItemDirective header= { headertext[0] }",
			"\t\t\tcontent= { 'Twitter ' } />",
			"\t\t<TabItemDirective header= { headertext[1] }",
			"\t\t\tcontent= { 'Facebook'  } />",
			"\t\t<TabItemDirective header= { headertext[2] }",
			"\t\t\tcontent= { 'WhatsApp Messenger' }/>",
			"\t\t</TabItemsDirective>",
			"\t\t</TabComponent>",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<App />, document.getElementById('element'));"
		]
	},
	"React Tab RTL Module": {
		"prefix": "ej2-react-tab-rtl",
		"description": "React Tab RTL Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { TabComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-react-navigations';",
			"export default class App extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\tlet headertext: any;",
			"\theadertext = [{ text: 'Twitter'}, { text: 'Facebook'}, { text: 'WhatsApp'}];",
			"\treturn (",
			"\t\t<TabComponent heightAdjustMode='Auto' enableRtl='true' id='tabelement'>",
			"\t\t<TabItemsDirective>",
			"\t\t<TabItemDirective header= { headertext[0] }",
			"\t\t\tcontent= { 'Twitter ' } />",
			"\t\t<TabItemDirective header= { headertext[1] }",
			"\t\t\tcontent= { 'Facebook'  } />",
			"\t\t<TabItemDirective header= { headertext[2] }",
			"\t\t\tcontent= { 'WhatsApp Messenger' }/>",
			"\t\t</TabItemsDirective>",
			"\t\t</TabComponent>",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<App />, document.getElementById('element'));"
		]
	},
	"React TimePicker Module": {
		"prefix": "ej2-react-timepicker",
		"description": "React TimePicker Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { enableRipple } from '@syncfusion/ej2-base';",
			"import { TimePickerComponent } from '@syncfusion/ej2-react-calendars';",
			"enableRipple(true);",
			"class ${1:App} extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn <TimePickerComponent id='timepicker' placeholder='Select a Time'  />",
			"\t}",
			"};",
			"ReactDOM.render(<${1:App} />, document.getElementById('timer'));"
		]
	},
	"React Toolbar Module": {
		"prefix": "ej2-react-toolbar",
		"description": "React Toolbar Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ToolbarComponent, ItemsDirective, ItemDirective } from '@syncfusion/ej2-react-navigations';",
			"class ReactApp extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<ToolbarComponent id='toolbar'>",
			"\t\t\t<ItemsDirective>",
			"\t\t\t<ItemDirective text='Cut' />",
			"\t\t\t<ItemDirective text='Copy'/>",
			"\t\t\t<ItemDirective text='Paste'/>",
			"\t\t\t<ItemDirective type='Separator'/>",
			"\t\t\t<ItemDirective text='Bold'/>",
			"\t\t\t<ItemDirective text='Italic'/>",
			"\t\t\t<ItemDirective text='Underline'/>",
			"\t\t\t </ItemsDirective>",
			"\t\t\t</ToolbarComponent>",
			");",
			"}",
			"}",
			"ReactDOM.render(<ReactApp/>, document.getElementById('toolbar'));"
		]
	},
	"React Toolbar RTL Module": {
		"prefix": "ej2-react-toolbar-rtl",
		"description": "React Toolbar RTL Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { ToolbarComponent, ItemsDirective, ItemDirective } from '@syncfusion/ej2-react-navigations';",
			"class ReactApp extends React.Component<{}, {}> {",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<ToolbarComponent id='toolbar' enableRtl='true'>",
			"\t\t\t<ItemsDirective>",
			"\t\t\t<ItemDirective text='Cut' />",
			"\t\t\t<ItemDirective text='Copy'/>",
			"\t\t\t<ItemDirective text='Paste'/>",
			"\t\t\t<ItemDirective type='Separator'/>",
			"\t\t\t<ItemDirective text='Bold'/>",
			"\t\t\t<ItemDirective text='Italic'/>",
			"\t\t\t<ItemDirective text='Underline'/>",
			"\t\t\t </ItemsDirective>",
			"\t\t\t</ToolbarComponent>",
			");",
			"}",
			"}",
			"ReactDOM.render(<ReactApp/>, document.getElementById('toolbar'));"
		]
	},
	"React Tooltip Module": {
		"prefix": "ej2-react-tooltip",
		"description": "React Tooltip Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import { TooltipComponent } from '@syncfusion/ej2-react-popups';",
			"",
			"class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\trender() {",
			"\tlet ${2:style}: object = {",
			"\t\tdisplay: 'inline-block',",
			"\t\tmargin: '60px'",
			"\t};",
			"\treturn (",
			"\t\t<TooltipComponent content='Tooltip Content' style={${2:style}}>",
			"\t\tShow Tooltip",
			"\t\t</TooltipComponent>",
			"\t);",
			"\t}",
			"}",
			"ReactDom.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React TreeView Module": {
		"prefix": "ej2-react-treeview",
		"description": "React TreeView Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import {TreeViewComponent} from '@syncfusion/ej2-react-navigations';",
			"",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\tpublic dataSource: { [key: string]: Object }[] = [",
			"\t{",
			"\t\tid: 'AF', text: 'Africa', child: [",
			"\t\t{ id: 'NGA', text: 'Nigeria' },",
			"\t\t{ id: 'EGY', text: 'Egypt' },",
			"\t\t{ id: 'ZAF', text: 'South Africa' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: 'AS', text: 'Asia', expanded: true, child: [",
			"\t\t{ id: 'CHN', text: 'China' },",
			"\t\t{ id: 'IND', text: 'India', selected: true },",
			"\t\t{ id: 'JPN', text: 'Japan' }",
			"\t\t]",
			"\t}",
			"];",
			"private field: object = { dataSource: this.${5:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:child}'}",
			"\trender() {",
			"\treturn (",
			"\t\t<TreeViewComponent fields={this.field} />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React TreeView Self Referencial Module": {
		"prefix": "ej2-react-treeview-self",
		"description": "React TreeView Self Referencial Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import {TreeViewComponent} from '@syncfusion/ej2-react-navigations';",
			"",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t{ id: 1, text: 'Discover Music', hasChildren: true, expanded: true },",
			"\t{ id: 2, parentID: 1, text: 'Hot Singles' },",
			"\t{ id: 3, parentID: 1, text: 'Rising Artists' },",
			"\t{ id: 4, parentID: 1, text: 'Live Music' },",
			"\t{ id: 6, parentID: 1, text: 'Best of 2017 So Far' },",
			"\t{ id: 7, text: 'Sales and Events', hasChildren: true },",
			"\t{ id: 8, parentID: 7, text: '100 Albums - $5 Each' }",
			"\t];",
			"\tpublic field: Object = { dataSource: this.${5:dataSource}, id: '${2:id}', parentID: '${3:parentID}', text: '${4:text}',hasChildren: '${5:hasChildren}' };",
			"\trender() {",
			"\treturn (",
			"\t\t<TreeViewComponent fields={this.field} />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React TreeView Editing Module": {
		"prefix": "ej2-react-treeview-editing",
		"description": "React TreeView Editing Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import {TreeViewComponent} from '@syncfusion/ej2-react-navigations';",
			"",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t{",
			"\t\tid: '01', text: 'Music',",
			"\t\tchild: [",
			"\t\t\t{ id: '01-01', text: 'Gouttes.mp3' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: '02', text: 'Videos', expanded: true,",
			"\t\tchild: [",
			"\t\t\t{ id: '02-01', text: 'Naturals.mp4' },",
			"\t\t\t{ id: '02-02', text: 'Wild.mpeg' },",
			"\t\t]",
			"\t},",
			"];",
			"\tpublic fields: Object = { dataSource: this.${5:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:child}' };",
			"\tpublic allowEditing: boolean = true;",
			"\tpublic editing(args: NodeEditEventArgs): void {",
			"\t\tif (args.node.parentNode.parentNode.nodeName !== 'LI ') {",
			"\targs.cancel = true;",
			"\t\t}",
			"\t}",
			"\trender() {",
			"\t\treturn (",
			"\t\t<TreeViewComponent fields={this.fields} allowEditing={this.allowEditing} nodeEditing={this.editing.bind(this)} />",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React TreeView Drag Module": {
		"prefix": "ej2-react-treeview-drag",
		"description": "React TreeView Drag Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import {TreeViewComponent} from '@syncfusion/ej2-react-navigations';",
			"",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t{",
			"\t\tid: 1, text: 'ASP.NET MVC Team', expanded: true,",
			"\t\tchild: [",
			"\t\t\t{ id: 2, parentID: 1, text: 'Smith' },",
			"\t\t\t{ id: 3, parentID: 1, text: 'Johnson', isSelected: true },",
			"\t\t\t{ id: 4, parentID: 1, text: 'Anderson' },",
			"\t\t]",
			"\t}",
			"\t{",
			"\t\tid: 5, text: 'Windows Team',",
			"\t\tchild: [",
			"\t\t\t{ id: 6, parentID: 5, text: 'Clark' },",
			"\t\t\t{ id: 7, parentID: 5, text: 'Wright' },",
			"\t\t\t{ id: 8, parentID: 5, text: 'Lopez' },",
			"\t\t]",
			"\t}",
			"];",
			"\tpublic fields: Object = { dataSource: this.${6:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:child}', selected: '${5:isSelected}' };",
			"\tpublic allowDragAndDrop : boolean = true;",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<TreeViewComponent fields={this.fields} allowDragAndDrop={ this.allowDragAndDrop }/>",
			"\t\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React TreeView Checkbox Module": {
		"prefix": "ej2-react-treeview-checkbox",
		"description": "React TreeView Checkbox Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import {TreeViewComponent} from '@syncfusion/ej2-react-navigations';",
			"",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t{ id: 1, text: 'Discover Music', hasChildren: true, expanded: true },",
			"\t{ id: 2, parentID: 1, text: 'Hot Singles' },",
			"\t{ id: 3, parentID: 1, text: 'Rising Artists' },",
			"\t{ id: 4, parentID: 1, text: 'Live Music' },",
			"\t{ id: 6, parentID: 1, text: 'Best of 2017 So Far' },",
			"\t{ id: 7, text: 'Sales and Events', hasChildren: true },",
			"\t{ id: 8, parentID: 7, text: '100 Albums - $5 Each' }",
			"\t];",
			"\tpublic field: Object = { dataSource: this.${6:dataSource}, id: '${2:id}', parentID: '${3:parentID}', text: '${4:text}',hasChildren: '${5:hasChildren}' };",
			"\tpublic isChecked: boolean = true;",
			"\trender() {",
			"\treturn (",
			"\t\t<TreeViewComponent fields={this.field} showCheckBox={this.isChecked} />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React TreeView MultiSelection Module": {
		"prefix": "ej2-react-treeview-multiselect",
		"description": "React TreeView MultiSelection Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import {TreeViewComponent} from '@syncfusion/ej2-react-navigations';",
			"",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t{ id: 1, text: 'Discover Music', hasChildren: true, expanded: true },",
			"\t{ id: 2, parentID: 1, text: 'Hot Singles' },",
			"\t{ id: 3, parentID: 1, text: 'Rising Artists' },",
			"\t{ id: 4, parentID: 1, text: 'Live Music' },",
			"\t{ id: 6, parentID: 1, text: 'Best of 2017 So Far' },",
			"\t{ id: 7, text: 'Sales and Events', hasChildren: true },",
			"\t{ id: 8, parentID: 7, text: '100 Albums - $5 Each' }",
			"\t];",
			"\tpublic field: Object = { dataSource: this.${6:dataSource}, id: '${2:id}', parentID: '${3:parentID}', text: '${4:text}',hasChildren: '${5:hasChildren}' };",
			"\t public allowMultiSelection: boolean = true;",
			"\trender() {",
			"\treturn (",
			"\t\t<TreeViewComponent fields={this.field} allowMultiSelection={ this.allowMultiSelection } />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	},
	"React TreeView RTL Module": {
		"prefix": "ej2-react-treeview-rtl",
		"description": "React TreeView RTL Module",
		"body": [
			"import * as React from 'react';",
			"import * as ReactDOM from 'react-dom';",
			"import {TreeViewComponent} from '@syncfusion/ej2-react-navigations';",
			"",
			"export default class ${1:App} extends React.Component<{}, {}> {",
			"",
			"\tprivate dataSource: { [key: string]: Object }[] = [",
			"\t{ id: 1, text: 'Discover Music', hasChildren: true, expanded: true },",
			"\t{ id: 2, parentID: 1, text: 'Hot Singles' },",
			"\t{ id: 3, parentID: 1, text: 'Rising Artists' },",
			"\t{ id: 4, parentID: 1, text: 'Live Music' },",
			"\t{ id: 6, parentID: 1, text: 'Best of 2017 So Far' },",
			"\t{ id: 7, text: 'Sales and Events', hasChildren: true },",
			"\t{ id: 8, parentID: 7, text: '100 Albums - $5 Each' }",
			"\t];",
			"\tpublic field: Object = { dataSource: this.${6:dataSource}, id: '${2:id}', parentID: '${3:parentID}', text: '${4:text}',hasChildren: '${5:hasChildren}' };",
			"\tpublic isChecked: boolean = true;",
			"\tpublic enablertl: boolean = true;",
			"\trender() {",
			"\treturn (",
			"\t\t<TreeViewComponent fields={this.field} showCheckBox={this.isChecked} enableRtl={this.enablertl} />",
			"\t);",
			"\t}",
			"}",
			"ReactDOM.render(<${1:App} />, document.getElementById('sample'));"
		]
	}
}