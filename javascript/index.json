{
	"JavaScript Accordion Module": {
		"prefix": "ej2-js-accordion",
		"description": "JavaScript Accordion Module",
		"body": [
			"var accordion = new ej.navigations.Accordion({",
			"\titems: [",
			"\t\t{ header: 'ASP.NET', expanded: 'true', content: 'Microsoft ASP.NET is a set of technologies in the Microsoft .NET Framework for building Web applications and XML Web services.' },",
			"\t\t{ header: 'ASP.NET MVC', content: 'The Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller.' },",
			"\t\t{ header: 'JavaScript', content: 'JavaScript (JS) is an interpreted computer programming language. It was originally implemented as part of web browsers so that client-side scripts could interact with the user, control the browser, communicate asynchronously, and alter the document content that was displayed.' },",
			"\t]",
			"});",
			"accordion.appendTo('#${1:element}');"
		]
	},
	"JavaScript Accordion with RTL": {
		"prefix": "ej2-js-accordion-rtl",
		"description": "JavaScript Accordion with RTL",
		"body": [
			"var accordion = new ej.navigations.Accordion({",
			"\titems: [",
			"\t\t{ header: 'ASP.NET', expanded: 'true', content: 'Microsoft ASP.NET is a set of technologies in the Microsoft .NET Framework for building Web applications and XML Web services.' },",
			"\t\t{ header: 'ASP.NET MVC', content: 'The Model-View-Controller (MVC) architectural pattern separates an application into three main components: the model, the view, and the controller.' },",
			"\t\t{ header: 'JavaScript', content: 'JavaScript (JS) is an interpreted computer programming language. It was originally implemented as part of web browsers so that client-side scripts could interact with the user, control the browser, communicate asynchronously, and alter the document content that was displayed.' },",
			"\t]",
			"\tenableRtl: true",
			"});",
			"accordion.appendTo('#${1:element}');"
		]
	},
	"JavaScript AutoComplete Module": {
		"prefix": "ej2-js-autocomplete",
		"description": "JavaScript AutoComplete Module",
		"body": [
			"var dataSource = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];",
			"var listObj  = new ej.dropdowns.AutoComplete({",
			"\tdataSource: ${1:dataSource},",
			"\tplaceholder: '${2:Select games}'});",
			"\tlistObj.appendTo('#${3:atcelement}');"
		]
	},
	"JavaScript AutoComplete with Remote DataSource": {
		"prefix": "ej2-js-autocomplete-ds-remote",
		"description": "JavaScript AutoComplete with Remote DataSource",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/'",
			"\tadaptor: new ej.data.ODataV4Adaptor()",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().from('Employees').select(['FirstName', 'City','EmployeeID']).take(6),",
			"var acObject  = new ej.dropdowns.AutoComplete({",
			"\tdataSource: ${1:dataSource},",
			"\tquery: ${2:query}",
			"\tfields: { value: '${3:FirstName}' },",
			"\tplaceholder:'${4:Select an employee}',",
			"\tsortOrder:'Ascending'",
			"});",
			"acObject .appendTo('#${5:atcelement}');"
		]
	},
	"JavaScript AutoComplete with Filtering": {
		"prefix": "ej2-js-autocomplete-filter",
		"description": "JavaScript AutoComplete with Filtering",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/Customers'",
			"\tadaptor: new ej.data.ODataV4Adaptor()",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().select(['ContactName'])",
			"var acObject  = new ej.dropdowns.DropDownList({",
			"\tdataSource: ${1:dataSource},",
			"\tquery:${2:query}",
			"\tfields: { value: '${3:ContactName}' },",
			"\tplaceholder:'${4:Select customers}',",
			"\tsortOrder: 'Ascending',",
			"\tfilterType: 'StartsWith',",
			"});",
			"acObject .appendTo('#${5:atcelement}');"
		]
	},
	"JavaScript Button Module": {
		"prefix": "ej2-js-button",
		"description": "JavaScript Button Module",
		"body": [
			"var button = new ej.buttons.Button();",
			"button.appendTo('#${1:element}');"
		]
	},
	"JavaScript Checkbox Module ": {
		"prefix": "ej2-js-checkbox",
		"description": "JavaScript Checkbox Module",
		"body": [
			"var checkbox = new ej.buttons.CheckBox({ label: '${1:Default}' });",
			"checkbox.appendTo('#${2:element}');"
		]
	},
	"JavaScript RadioButton Module ": {
		"prefix": "ej2-js-radio",
		"description": "JavaScript RadioButton Module",
		"body": [
			"var radiobutton = new ej.buttons.RadioButton({ label: '${1:Option 1}', name: '${2:default}'});",
			"radiobutton.appendTo('#${3:element1}');"
		]
	},
	"JavaScript Calendar Module": {
		"prefix": "ej2-js-calendar",
		"description": "JavaScript Calendar Module",
		"body": [
			"var calendar  = new ej.calendars.Calendar({",
			"\tchange: function (args) {",
			"\t(document.getElementById('${1:date_label}')).textContent = 'Selected Value: ' + args.value.toLocaleDateString();",
			"}",
			"});",
			"calendar.appendTo('#${2:element}');"
		]
	},
	"JavaScript Combobox Module": {
		"prefix": "ej2-js-combobox",
		"description": "JavaScript Combobox Module",
		"body": [
			"var dataSource = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];",
			"var comboBoxObject = new ej.dropdowns.ComboBox({",
			"\tdataSource: ${1:dataSource},",
			"\tplaceholder: '${2:Select games}'});",
			"\tcomboBoxObject.appendTo('#${3:comboelement}');"
		]
	},
	"JavaScript Combobox with Remote DataSource": {
		"prefix": "ej2-js-combobox-ds-remote",
		"description": "JavaScript Combobox with Remote DataSource",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/'",
			"\tadaptor: new ej.data.ODataV4Adaptor()",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().from('Employees').select(['FirstName', 'City','EmployeeID']).take(6),",
			"var comboBoxObject = new ej.dropdowns.ComboBox({",
			"\tdataSource: ${1:dataSource},",
			"\tquery: ${2:query}",
			"\tfields: { value: '${3:FirstName}' },",
			"\tplaceholder:'${4:Select an employee}',",
			"\tsortOrder:'Ascending'",
			"});",
			"comboBoxObject.appendTo('#${5:comboelement}');"
		]
	},
	"JavaScript Combobox with Filtering": {
		"prefix": "ej2-js-combobox-filter",
		"description": "JavaScript Combobox with Filtering",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/Customers'",
			"\tadaptor: new ej.data.ODataV4Adaptor()",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().select(['ContactName', 'CustomerID']).take(7),",
			"var comboBoxObject = new ej.dropdowns.ComboBox({",
			"\tdataSource: ${1:dataSource},",
			"\tquery:${2:query}",
			"\tfields: { text: 'ContactName', value: 'CustomerID' },",
			"\tplaceholder:'${3:Select customers}',",
			"\tsortOrder: 'Ascending',",
			"\tallowFiltering: true,",
			"\tfiltering: (e) => {",
			"\tif(e.text == '') e.updateData(${4:dataSource});",
			"\telse{",
			"\t\tif (e.text.length < 3) { return; }",
			"\tvar query = new ej.data.Query().select(['ContactName', 'CustomerID']);",
			"\tquery = (e.text !== '') ? query.where('ContactName', 'startswith', e.text, true) : query;",
			"\te.updateData(5:{dataSource}, query);",
			"}",
			"}",
			"});",
			"comboBoxObject.appendTo('#${6:comboelement}');"
		]
	},
	"JavaScript ContextMenu Module": {
		"prefix": "ej2-js-contextmenu",
		"description": "JavaScript ContextMenu Module",
		"body": [
			"var menuItems = [",
			"\t{",
			"\t\ttext: 'Cut'",
			"\t}",
			"\t{",
			"\t\ttext: 'Copy'",
			"\t}",
			"\t{",
			"\t\ttext: 'Paste'",
			"\t}];",
			"var menuOptions = {",
			"\ttarget: '#${1:target}',",
			"\titems: ${2:menuItems}",
			"};",
			"var menuObj = new ej.navigations.ContextMenu(menuOptions, '#${3:contextmenu}');"
		]
	},
	"JavaScript DatePicker Module": {
		"prefix": "ej2-js-datepicker",
		"description": "JavaScript DatePicker Module",
		"body": [
			"var datepicker = new ej.calendars.DatePicker({",
			"\tplaceholder: '${1:Choose a date}'",
			"});",
			"datepicker.appendTo('#${2:element}');"
		]
	},
	"JavaScript DateRangePicker Module": {
		"prefix": "ej2-js-daterangepicker",
		"description": "JavaScript DateRangePicker Module",
		"body": [
			"var daterangepicker = new ej.calendars.DateRangePicker({",
			"\tplaceholder: '${1:Select a range}'",
			"});",
			"daterangepicker.appendTo('#${2:element}');"
		]
	},
	"JavaScript Dialog Module": {
		"prefix": "ej2-js-dialog",
		"description": "JavaScript Dialog Module",
		"body": [
			"var dialog = new ej.popups.Dialog({",
			"\tcontent: 'This is a Dialog with content',",
			"\ttarget: document.getElementById('${1:container}')",
			"\twidth: '250px'",
			"});",
			"dialog.appendTo('#${2:dialog}');",
			"document.getElementById('${3:targetButton}').onclick = function() {",
			"\tdialog.show();",
			"}"
		]
	},
	"JavaScript Dialog with RTL": {
		"prefix": "ej2-js-dialog-rtl",
		"description": "JavaScript Dialog with RTL",
		"body": [
			"var dialog = new ej.popups.Dialog({",
			"\tcontent: 'This is a Dialog with content',",
			"\ttarget: document.getElementById('${1:container}')",
			"\twidth: '250px'",
			"\tenableRTL:true",
			"});",
			"dialog.appendTo('#${2:dialog}');",
			"document.getElementById('${3:targetButton}').onclick = function() {",
			"\tdialog.show();",
			"}"
		]
	},
	"JavaScript DropDownList Module": {
		"prefix": "ej2-js-dropdown",
		"description": "JavaScript DropDownList Module",
		"body": [
			"var dataSource = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];",
			"var listObj  = new ej.dropdowns.DropDownList({",
			"\tdataSource: ${1:dataSource},",
			"\tplaceholder: '${2:Select games}'});",
			"\tlistObj.appendTo('#${3:ddlelement}');"
		]
	},
	"JavaScript DropDownList with Remote DataSource": {
		"prefix": "ej2-js-dropdown-ds-remote",
		"description": "JavaScript DropDownList with Remote DataSource",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/'",
			"\tadaptor: new ej.data.ODataV4Adaptor()",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().from('Employees').select(['FirstName', 'City','EmployeeID']).take(6),",
			"var ddlObject  = new ej.dropdowns.DropDownList({",
			"\tdataSource: ${1:dataSource},",
			"\tquery: ${2:query}",
			"\tfields: { value: '${3:FirstName}' },",
			"\tplaceholder:'${4:Select an employee}',",
			"\tsortOrder:'Ascending'",
			"});",
			"ddlObject .appendTo('#${5:ddlelement}');"
		]
	},
	"JavaScript DropDownList with Filtering": {
		"prefix": "ej2-dropdown-filter",
		"description": "JavaScript DropDownList with Filtering",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/Customers'",
			"\tadaptor: new ej.data.ODataV4Adaptor()",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().select(['ContactName', 'CustomerID']).take(7),",
			"var ddlObject = new ej.dropdowns.DropDownList({",
			"\tdataSource: ${1:dataSource},",
			"\tquery:${2:query}",
			"\tfields: { text: 'ContactName', value: 'CustomerID' },",
			"\tplaceholder:'${3:Select customers}',",
			"\tsortOrder: 'Ascending',",
			"\tallowFiltering: true,",
			"\tfiltering: (e) => {",
			"\tif(e.text == '') e.updateData(${4:dataSource});",
			"\telse{",
			"\t\tif (e.text.length < 3) { return; }",
			"\tvar query = new ej.data.Query().select(['ContactName', 'CustomerID']);",
			"\tquery = (e.text !== '') ? query.where('ContactName', 'startswith', e.text, true) : query;",
			"\te.updateData(${5:dataSource}, query);",
			"}",
			"}",
			"});",
			"ddlObject.appendTo('#${6:ddlelement}');"
		]
	},
	"JavaScript ListView Module": {
		"prefix": "ej2-js-listview",
		"description": "JavaScript ListView Module",
		"body": [
			"var arts = [",
			"\t{ text: 'Artwork', id: '01' },",
			"\t{ text: 'Abstract', id: '02' },",
			"\t{ text: 'Modern Painting', id: '03' },",
			"\t{ text: 'Ceramics', id: '04' },",
			"\t{ text: 'Animation Art', id: '05' },",
			"\t{ text: 'Oil Painting', id: '06' }",
			"];",
			"var listviewInstance = new ej.lists.ListView({",
			"\tdataSource: ${1:arts}",
			"});",
			"listviewInstance.appendTo('#${2:element}');"
		]
	},
	"JavaScript ListView with Remote DataSource": {
		"prefix": "ej2-js-listview-ds-remote",
		"description": "JavaScript ListView with Remote DataSource",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/'",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().from('Products').select('ProductID,ProductName').take(6),",
			"var listviewInstance   = new ej.lists.ListView({",
			"\tdataSource: ${1:dataSource},",
			"\tquery: ${2:query}",
			"\t fields: { id: '${3:ProductID}', text: '${4:ProductName}' },",
			"\theaderTitle: '${5:Product Name}'',",
			"\tshowHeader: true'",
			"});",
			"listviewInstance.appendTo('#${6:element}');"
		]
	},
	"JavaScript ListView with RTL": {
		"prefix": "ej2-js-listview-rtl",
		"description": "JavaScript ListView with RTL",
		"body": [
			"var arts = [",
			"\t{ text: 'Artwork', id: '01' },",
			"\t{ text: 'Abstract', id: '02' },",
			"\t{ text: 'Modern Painting', id: '03' },",
			"\t{ text: 'Ceramics', id: '04' },",
			"\t{ text: 'Animation Art', id: '05' },",
			"\t{ text: 'Oil Painting', id: '06' }",
			"];",
			"var listviewInstance = new ej.lists.ListView({",
			"\tdataSource: ${1:arts}",
			"\tenableRtl:true",
			"});",
			"listviewInstance.appendTo('#${2:element}');"
		]
	},
	"JavaScript MaskedTextbox Module": {
		"prefix": "ej2-js-maskedtextbox",
		"description": "JavaScript MaskedTextbox Module",
		"body": [
			"var mask = new ej.inputs.MaskedTextBox({",
			"\tmask: '000-000-0000'",
			"});",
			"mask.appendTo('#${1:mask1}');"
		]
	},
	"JavaScript MaskedTextbox with custom characters": {
		"prefix": "ej2-js-maskedtextbox-customch",
		"description": "JavaScript MaskedTextbox with custom characters",
		"body": [
			"var mask1 = new ej.inputs.MaskedTextBox({",
			"\tmask: '00:00 >PM',",
			"\tcustomCharacters: {",
			"\t\tP: 'P,A,a,p',",
			"\t\tM: 'M,m'",
			"\t}",
			"\tfloatLabelType: 'Never'",
			"});",
			"mask.appendTo('#${1:mask1}');"
		]
	},
	"JavaScript MultiSelect Module": {
		"prefix": "ej2-js-multiselect",
		"description": "JavaScript MultiSelect Module",
		"body": [
			"var dataSource = ['Badminton', 'Cricket', 'Football', 'Golf', 'Tennis'];",
			"var listObj  = new ej.dropdowns.MultiSelect({",
			"\tdataSource: ${1:dataSource},",
			"\tplaceholder: '${2:Select games}'});",
			"\tlistObj.appendTo('#${3:select}');"
		]
	},
	"JavaScript MultiSelect with Remote DataSource": {
		"prefix": "ej2-js-multiselect-ds-remote",
		"description": "JavaScript MultiSelect with Remote DataSource",
		"body": [
			"var dataSource = new ej.data.DataManager({",
			"\turl: 'http://services.odata.org/V4/Northwind/Northwind.svc/'",
			"\tadaptor: new ej.data.ODataV4Adaptor()",
			"\tcrossDomain: true",
			"});",
			"var query=new ej.data.Query().from('Employees').select(['FirstName', 'City','EmployeeID']).take(6),",
			"var msObject   = new ej.dropdowns.MultiSelect({",
			"\tdataSource: ${1:dataSource},",
			"\tquery: ${2:query}",
			"\tfields: {text: '${3:FirstName}' value: '${4:EmployeeID}' },",
			"\tplaceholder:'${5:Select an employee}',",
			"\tsortOrder:'Ascending'",
			"});",
			"msObject .appendTo('#${6:select}');"
		]
	},
	"JavaScript MultiSelect with Grouping": {
		"prefix": "ej2-multiselect-grouping",
		"description": "JavaScript MultiSelect with Grouping",
		"body": [
			"var listObj = new ej.dropdowns.MultiSelect({",
			"\tplaceholder: '${1:Select games}'});",
			"listObj.appendTo('#${2:selectElement}');"
		]
	},
	"JavaScript NumericTextBox Module": {
		"prefix": "ej2-js-numerictextbox",
		"description": "JavaScript NumericTextBox Module",
		"body": [
			"var numeric = new ej.inputs.NumericTextBox({",
			"\tvalue: 10",
			"});",
			"numeric.appendTo('#${1:numeric}');"
		]
	},
	"JavaScript Tab Module": {
		"prefix": "ej2-js-Tab",
		"description": "JavaScript Tab Module",
		"body": [
			"var items= [",
			"\t\t{",
			"\t\t\theader: { 'text': 'Twitter', 'iconCss': 'e-twitter' },",
			"\t\t\tcontent: 'Twitter is an online social networking service that enables users to send and read short 140-character ' +",
			"\t\t'messages called 'tweets'. Registered users can read and post tweets, but those who are unregistered can only read them'",
			"\t\t}",
			"\t\t{",
			"\t\t\theader: { 'text': 'Facebook', 'iconCss': 'e-facebook' },",
			"\t\t\tcontent: 'Facebook is an online social networking service headquartered in Menlo Park, California.'+",
			"\t\tIts website was ' + 'launched on February 4, 2004, by Mark Zuckerberg with his Harvard College roommates and fellow students Eduardo ' +",
			"\t\t'Saverin, Andrew McCollum, Dustin Moskovitz and Chris Hughes.'",
			"\t\t}",
			"\t\t{",
			"\t\t\theader: { 'text': 'WhatsApp', 'iconCss': 'e-whatsapp' },",
			"\t\t\tcontent: 'WhatsApp Messenger is a proprietary cross-platform instant messaging client for smartphones that operates '+ ",
			"\t\t'under a subscription business model.'",
			"\t\t}",
			"\t]",
			"var tabObj = new ej.navigations.Tab({",
			"\titems:${1:items} ",
			"});",
			"tabObj.appendTo('#${2:Tab}');"
		]
	},
	"JavaScript Tab with RTL": {
		"prefix": "ej2-js-tab-rtl",
		"description": "JavaScript Tab with RTL",
		"body": [
			"var items= [",
			"\t\t{",
			"\t\t\theader: { 'text': 'Twitter', 'iconCss': 'e-twitter' },",
			"\t\t\tcontent: 'Twitter is an online social networking service that enables users to send and read short 140-character ' +",
			"\t\t'messages called 'tweets'. Registered users can read and post tweets, but those who are unregistered can only read them'",
			"\t\t}",
			"\t\t{",
			"\t\t\theader: { 'text': 'Facebook', 'iconCss': 'e-facebook' },",
			"\t\t\tcontent: 'Facebook is an online social networking service headquartered in Menlo Park, California.'+",
			"\t\tIts website was ' + 'launched on February 4, 2004, by Mark Zuckerberg with his Harvard College roommates and fellow students Eduardo ' +",
			"\t\t'Saverin, Andrew McCollum, Dustin Moskovitz and Chris Hughes.'",
			"\t\t}",
			"\t\t{",
			"\t\t\theader: { 'text': 'WhatsApp', 'iconCss': 'e-whatsapp' },",
			"\t\t\tcontent: 'WhatsApp Messenger is a proprietary cross-platform instant messaging client for smartphones that operates '+ ",
			"\t\t'under a subscription business model.'",
			"\t\t}",
			"\t]",
			"var tabObj = new ej.navigations.Tab({",
			"\tenableRtl:true,",
			"\titems:${1:items} ",
			"});",
			"tabObj.appendTo('#${2:Tab}');"
		]
	},
	"JavaScript TimePicker Module": {
		"prefix": "ej2-js-timepicker",
		"description": "JavaScript TimePicker Module",
		"body": [
			"var timepicker  = new ej.calendars.TimePicker({",
			"\tplaceholder: '${1:Select a time}'",
			"});",
			"timepicker.appendTo('#${2:element}');"
		]
	},
	"JavaScript Toolbar Module": {
		"prefix": "ej2-js-toolbar",
		"description": "JavaScript Toolbar Module",
		"body": [
			"var toolbar = new ej.navigations.Toolbar({",
			"\titems: [",
			"\t\t{ text: 'Cut' },",
			"\t\t{ text: 'Copy' },",
			"\t\t{ text: 'Paste' },",
			"\t\t{ type: 'Separator'},",
			"\t\t{ text: 'Bold' },",
			"\t\t{ text: 'Italic' },",
			"\t\t{ text: 'Underline' },",
			"\t]",
			"});",
			"toolbar.appendTo('#${1:element}');"
		]
	},
	"JavaScript ToolbarToolbar": {
		"prefix": "ej2-js-toolbar-rtl",
		"description": "JavaScript Toolbar Toolbar",
		"body": [
			"var toolbar = new ej.navigations.Toolbar({",
			"\titems: [",
			"\t\t{ text: 'Cut' },",
			"\t\t{ text: 'Copy' },",
			"\t\t{ text: 'Paste' },",
			"\t\t{ type: 'Separator'},",
			"\t\t{ text: 'Bold' },",
			"\t\t{ text: 'Italic' },",
			"\t\t{ text: 'Underline' },",
			"\t]",
			"\tenableRtl:true",
			"});",
			"toolbar.appendTo('#${1:element}');"
		]
	},
	"JavaScript Tooltip Module": {
		"prefix": "ej2-js-tooltip",
		"description": "JavaScript Tooltip Module",
		"body": [
			"var tooltip = new ej.popups.Tooltip({",
			"\tcontent: 'Tooltip content'",
			"});",
			"tooltip.appendTo('#${1:target}');"
		]
	},
	"Javascript TreeView Module": {
		"prefix": "ej2-js-treeview",
		"description": "Javascript TreeView Module",
		"body": [
			"var dataSource = [",
			"\t{",
			"\t\tid: '01', text: 'Music',",
			"\t\tChild: [",
			"\t\t\t{ id: '01-01', text: 'Gouttes.mp3' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: '02', text: 'Videos', expanded: true,",
			"\t\tChild: [",
			"\t\t\t{ id: '02-01', text: 'Naturals.mp4' },",
			"\t\t\t{ id: '02-02', text: 'Wild.mpeg' },",
			"\t\t]",
			"\t},",
			"];",
			"",
			"var treeObj =  new ej.navigations.TreeView({",
			"\tfields: { dataSource: ${1:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:Child}' }",
			"});",
			"treeObj.appendTo('#${5:tree}');"
		]
	},
	"JavaScript TreeView with self-referential data source.": {
		"prefix": "ej2-js-treeview-self",
		"description": "JavaScript TreeView with self-referential data source",
		"body": [
			"var dataSource = [",
			"\t{ id: 1, text: 'Discover Music', hasChild: true, expanded: true },",
			"\t{ id: 2, pid: 1, text: 'Hot Singles' },",
			"\t{ id: 3, pid: 1, text: 'Rising Artists' },",
			"\t{ id: 4, pid: 1, text: 'Live Music' },",
			"\t{ id: 6, pid: 1, text: 'Best of 2017 So Far' },",
			"\t{ id: 7, text: 'Sales and Events', hasChild: true },",
			"\t{ id: 8, pid: 7, text: '100 Albums - $5 Each' },",
			"\t{ id: 9, pid: 7, text: 'Hip-Hop and R&B Sale' },",
			"\t{ id: 10, pid: 7, text: 'CD Deals' },];",
			"var treeObj =  new ej.navigations.TreeView({",
			"\tfields: { dataSource: ${1:dataSource}, id: '${2:id}', text: '${3:text}', parentID: '${4:pid}', hasChildren: '${5:hasChild}'  }",
			"});",
			"treeObj.appendTo('#${6:tree}');"
		]
	},
	"JavaScript TreeView with editing support.": {
		"prefix": "ej2-js-treeview-editing",
		"description": "JavaScript TreeView with editing support",
		"body": [
			"var dataSource = [",
			"\t{",
			"\t\tid: '01', text: 'Music',",
			"\t\tChild: [",
			"\t\t\t{ id: '01-01', text: 'Gouttes.mp3' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: '02', text: 'Videos', expanded: true,",
			"\t\tChild: [",
			"\t\t\t{ id: '02-01', text: 'Naturals.mp4' },",
			"\t\t\t{ id: '02-02', text: 'Wild.mpeg' },",
			"\t\t]",
			"\t},",
			"];",
			"",
			"var treeObj =  new ej.navigations.TreeView({",
			"\tfields: { dataSource: ${1:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:Child}' }",
			"\tallowEditing:true,",
			"\tnodeEditing: editing",
			"});",
			"treeObj.appendTo('#${5:tree}');",
			"function editing(args) {",
			"\tif (args.node.parentNode.parentNode.nodetext !== 'LI') {",
			"\t\targs.cancel = true;",
			" \t}",
			"}"
		]
	},
	"JavaScript TreeView with drag and drop.": {
		"prefix": "ej2-js-treeview-drag",
		"description": "JavaScript TreeView with drag and drop",
		"body": [
			"var dataSource = [",
			"\t{",
			"\t\tid: '01', text: 'Music',",
			"\t\tChild: [",
			"\t\t\t{ id: '01-01', text: 'Gouttes.mp3' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: '02', text: 'Videos', expanded: true,",
			"\t\tChild: [",
			"\t\t\t{ id: '02-01', text: 'Naturals.mp4' },",
			"\t\t\t{ id: '02-02', text: 'Wild.mpeg' },",
			"\t\t]",
			"\t},",
			"];",
			"",
			"var treeObj =  new ej.navigations.TreeView({",
			"\tfields: { dataSource: ${1:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:Child}' }",
			"\tallowDragAndDrop: true,",
			"});",
			"treeObj.appendTo('#${5:tree}');"
		]
	},
	"JavaScript TreeView with Checkbox": {
		"prefix": "ej2-js-treeview-checkbox",
		"description": "JavaScript TreeView with Checkbox",
		"body": [
			"var dataSource = [",
			"\t{",
			"\t\tid: '01', text: 'Music',",
			"\t\tChild: [",
			"\t\t\t{ id: '01-01', text: 'Gouttes.mp3' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: '02', text: 'Videos', expanded: true,",
			"\t\tChild: [",
			"\t\t\t{ id: '02-01', text: 'Naturals.mp4' },",
			"\t\t\t{ id: '02-02', text: 'Wild.mpeg' },",
			"\t\t]",
			"\t},",
			"];",
			"",
			"var treeObj =  new ej.navigations.TreeView({",
			"\tfields: { dataSource: ${1:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:Child}' }",
			"\tshowCheckBox: true,",
			"});",
			"treeObj.appendTo('#${5:tree}');"
		]
	},
	"JavaScript TreeView with MultiSelection": {
		"prefix": "ej2-js-treeview-multiselect",
		"description": "JavaScript TreeView with MultiSelection",
		"body": [
			"var dataSource = [",
			"\t{",
			"\t\tid: '01', text: 'Music',",
			"\t\tChild: [",
			"\t\t\t{ id: '01-01', text: 'Gouttes.mp3' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: '02', text: 'Videos', expanded: true,",
			"\t\tChild: [",
			"\t\t\t{ id: '02-01', text: 'Naturals.mp4' },",
			"\t\t\t{ id: '02-02', text: 'Wild.mpeg' },",
			"\t\t]",
			"\t},",
			"];",
			"",
			"var treeObj =  new ej.navigations.TreeView({",
			"\tfields: { dataSource: ${1:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:Child}' }",
			"\tallowMultiSelection: true,",
			"});",
			"treeObj.appendTo('#${5:tree}');"
		]
	},
	"JavaScript TreeView with RTL": {
		"prefix": "ej2-js-treeview-rtl",
		"description": "JavaScript TreeView with rtl",
		"body": [
			"var dataSource = [",
			"\t{",
			"\t\tid: '01', text: 'Music',",
			"\t\tChild: [",
			"\t\t\t{ id: '01-01', text: 'Gouttes.mp3' }",
			"\t\t]",
			"\t},",
			"\t{",
			"\t\tid: '02', text: 'Videos', expanded: true,",
			"\t\tChild: [",
			"\t\t\t{ id: '02-01', text: 'Naturals.mp4' },",
			"\t\t\t{ id: '02-02', text: 'Wild.mpeg' },",
			"\t\t]",
			"\t},",
			"];",
			"",
			"var treeObj =  new ej.navigations.TreeView({",
			"\tfields: { dataSource: ${1:dataSource}, id: '${2:id}', text: '${3:text}', child: '${4:Child}' }",
			"\tenableRtl: true,",
			"});",
			"treeObj.appendTo('#${5:tree}');"
		]
	}
}